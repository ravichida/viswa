{"version":3,"sources":["config.js","update.js","modalDialog.js","orderdetailslist.js","orderdetails.js","addorder.js","updateReadOnly.js","modalDialogReadOnly.js","home.js","search.js","menu.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","InditialStateObj","user","uid","name","email","phone","order","orderno","items","price","total","startdate","startDate","selectedDay","handleDayChange","setState","state","moment","format","updateField","e","preventDefault","target","type","checked","value","updateChange","event","update","console","log","resetForm","baseState","bind","React","createRef","nextProps","this","className","ref","readOnly","placeholder","onChange","overlayComponent","CustomOverlay","onDayChange","onClick","data-toggle","data-target","data-show","Component","classNames","children","overlayWrapper","style","marginTop","marginLeft","overlay","ModalDialog","updateList","id","role","data-dismiss","remove","removeData","OrderDetailsList","sortUsers","editData","updateApp","write","width","users","map","key","$","modal","show","AddOrder","Date","handleChange","date","orderNumber","sortedUsers","i","length","sort","a","b","highestOrder","parseInt","addUser","refs","condition","devIndex","findIndex","data","getTime","toString","action","add","String","max","selected","UpdateReadOnly","updateBtn","showUpdateBtn","readonly","fname","ModalDialogReadOnly","Home","displayData","href","Search","searchStyle","fontSize","align","textAlign","display","paddingTop","searchString","libraries","trim","toLowerCase","filter","match","margin","lname","Menu","activeId","Links","path","link","to","handleClick","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","push","newState","updateData","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74197933.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\nimport moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"../node_modules/react-day-picker/lib/style.css\";\n\nclass Update extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.startdate = React.createRef();\n\n        this.state = this.InditialStateObj;\n\n        this.baseState = this.state;\n\n    }\n\n    InditialStateObj = {\n        user: {\n            uid: '',\n            name: '',\n            email: '',\n            phone: '',\n            order: '',\n            orderno: '',\n            items: 0,\n            price: 0,\n            total: 0,\n            startdate: \"\"\n        },\n        startDate: \"\",\n        selectedDay: \"\"\n    }\n\n\n    handleDayChange = selectedDay => {\n        this.setState({ \n            user: {\n                ...this.state.user,\n                startdate: moment(selectedDay).format()\n            }\n            // selectedDay: moment(selectedDay).format(),\n            // user: {startdate: moment(selectedDay).format()}\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"NP Updated\");\n        if (this.props.user !== nextProps.user) {\n            this.setState({\n                user: nextProps.user,\n                // selectedDay: nextProps.user.startdate\n            });\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            /* \n            User Full name\n            let user = {};\n            user = { ...this.state.user, name: this.state.user.fname + \" \" + this.state.user.lname }; */\n            console.log(\"updat user\", this.state.user);\n            this.props.update(this.state.user);\n\n        }\n        // this.resetForm();\n    }\n\n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n\n\n    render() {\n        return (\n            <div className='row'>\n                {/* <div className='col-xl-12'>\n                    {JSON.stringify(this.props.user, null, 2)}\n                </div> */}\n                <div className='col-xl-12'>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                {/*<input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />*/}\n                                <input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly className=\"form-control\" placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.name} value={this.state.user.name || ''} onChange={(e) => this.updateField(\"name\", e)} className=\"form-control\" placeholder=\"Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date </label>\n                                <div>\n                                    <DayPickerInput\n                                        overlayComponent={CustomOverlay}\n                                        name=\"birthday\"\n                                        placeholder=\"DD/MM/YYYY\"\n                                        format=\"DD/MM/YYYY\"\n                                        // value={moment(this.state.selectedDay).format('DD/MM/YYYY')}\n                                        value={moment(this.state.user.startdate).format('DD/MM/YYYY')}\n                                        onDayChange={this.handleDayChange}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"number\" ref={this.phone} value={(this.state.user.items * this.state.user.price) || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Total\" />\n                            </div>\n                            {/* <div className=\"form-group col-md-6\">\n                                <div>\n                                    <p>\n                                        this.state.selectedDay : {moment(this.state.selectedDay).format()}\n                                    </p>\n                                    <p>\n                                        this.state.user.startdate : {this.state.user.startdate}\n                                    </p>\n                                </div>\n                            </div> */}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\nfunction CustomOverlay({ classNames, selectedDay, children, ...props }) {\n    let overlayMargin = {\n        marginTop: -200,\n        marginLeft: 100,\n    }\n    return (\n        <div\n            className={classNames.overlayWrapper}\n            // style={{ marginTop: -200 }}\n            style={overlayMargin}\n            {...props}\n        >\n            <div className={classNames.overlay}>\n                {/* <h3>Hello day picker!</h3> */}\n                {/* <p>\n            <input />\n            <button onClick={() => console.log('clicked!')}>button</button>\n          </p> */}\n                {/* <p>\n            {selectedDay\n              ? `You picked: ${selectedDay.toLocaleDateString()}`\n              : 'Please pick a day'}\n          </p> */}\n                {children}\n            </div>\n        </div>\n    );\n}\n\nCustomOverlay.propTypes = {\n    classNames: PropTypes.object.isRequired,\n    selectedDay: PropTypes.instanceOf(Date),\n    children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport Update from './update'\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"90%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Update Order</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <Update user={this.props.user} remove={this.removeData} update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass OrderDetailsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sortUsers = this.sortUsers.bind(this);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details List</h4>\n            <table className=\"table table-striped olistTable\">\n              <tbody>\n                <tr>\n                  <th width=\"7%\">Order</th>\n                  <th width=\"20%\">Order Name</th>\n                  <th width=\"20%\">Customer Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Edit</th>\n                  <th>Delete</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.orderno} style={{}}>\n                        <td className=\"\">{user.orderno}</td>\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.name}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.items * user.price}</td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-primary\" onClick={(event) => this.editData(user, event)}>Edit</button></td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table>\n          </div>\n          {/* <div className='col-xl-12'>\n            {JSON.stringify(this.props.users, null, 4)}\n          </div> */}\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  sortUsers(users) {\n\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false });\n      $(\".modal-backdrop\").remove();\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n\n}\nexport default OrderDetailsList;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n        this.state = {\n            user: {},\n            searchUsers: {}\n        }\n    }\n\n    removeData(user) {\n        if (typeof (this.props.remove) === 'function') {\n            this.props.remove(user);\n        }\n    }\n\n    render() \n    {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Search Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.orderno} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }} id={user.uid}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"text-danger\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={(event) => this.editData(user, event)}>Edit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    updateSearch(user){\n        console.log(\"updateSearch usr\", user);\n\n    }\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false });\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    editData(user, e) {\n        console.log(\"editdata fun\");\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;\n\n","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.orderNumber = this.orderNumber.bind(this);\n        this.state = {\n            users: [],\n          };\n    }\n\n    state = {\n        startDate: new Date()\n      };\n    \n      handleChange = date => {\n        this.setState({\n          startDate: date\n        });\n      };\n\n    render() {\n\n        var newOrderNumber = this.orderNumber(this.props.users);\n\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n                {/*\n                {JSON.stringify(this.props.users,null, 2)}\n                {sortedUsers}<br />\n                {highestOrder}<br />\n                {newOrderNumber}<br />\n                */}\n            </div>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"number\" ref='orderno' className=\"form-control\" value={String(this.orderNumber(this.props.users))} readOnly placeholder=\"Oder No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Order Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\"  max={999999999999} ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Date</label>\n                    <DatePicker selected={this.state.startDate} ref='startdate' onChange={this.handleChange} />\n                </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            {/* <div><pre>{JSON.stringify(newOrderNumber, null, 2) }</pre></div> */}\n            </div>\n        </div>\n      )\n    }\n\n    orderNumber = function(users) {\n            let sortedUsers = [];\n            for(let i=0; i<users.length; i++) {\n                sortedUsers[i] = users[i].orderno;\n            }\n            sortedUsers.sort(function(a, b){return a - b});\n            let highestOrder = sortedUsers[sortedUsers.length-1];\n            let orderNumber = parseInt(highestOrder)+1;\n            return orderNumber;\n    }\n  \n    addUser = (event) => {\n        console.log(\"Added form details\");\n        let orderno = parseInt(this.refs.orderno.value);\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let uid = this.refs.uid.value;\n        let startDate = this.state.startDate\n        const condition = (name && email && phone && order && orderno && items && price && startDate);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].orderno = orderno;\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].items = parseInt(items);\n          users[devIndex].price = parseInt(price);\n          // users[devIndex].total = parseInt(items) * parseInt(price);\n          users[devIndex].startdate = startDate;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"name\": name,\n                \"email\": email,\n                \"phone\": phone,\n                \"order\": order,\n                \"orderno\": parseInt(orderno),\n                \"items\": parseInt(items),\n                \"price\": parseInt(price),\n                \"uid\": parseInt(uid),\n                \"startdate\": startDate.toString()\n                }\n            this.props.action(user);\n            console.log(\"action user\", user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.startdate.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"items\": \"200\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": 0,\n            \"date\": \"03/4/20\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;\n","import React from 'react';\nimport moment from \"moment\";\n\nclass UpdateReadOnly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { readonly: true };\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                name: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            },\n            showUpdateBtn: false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        /* if (typeof this.props.update === 'function') {\n            let user = {};\n            this.props.update(user);\n        } */\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn: !this.state.showUpdateBtn,\n            readonly: \"readonly\"\n        });\n    }\n\n    render() {\n        console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Order Details</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.items * this.state.user.price || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date</label>\n                                <input type=\"text\" ref={this.startdate} value={this.state.user.startdate ? moment(this.state.user.startdate).format('DD/MM/YYYY') : null || ''} onChange={(e) => this.updateField(\"startdate\", e)} className=\"form-control\" placeholder=\"Date\" readOnly />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n        if (this.state.readonly) {\n            return (\n                <UpdateBtn />\n            );\n        }\n        return (\n            <UpdateBtn />\n        );\n    }\n}\nexport default UpdateReadOnly;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\n","import React from 'react';\nimport UpdateReadOnly from './updateReadOnly'\nclass ModalDialogReadOnly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <UpdateReadOnly user={this.props.user} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialogReadOnly;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport ModalDialogReadOnly from './modalDialogReadOnly';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayData = this.displayData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          {/* <div className='myst'>Orders</div> */}\n            <h4 className='my-3'>Orders List</h4>\n            {this.props.users.map(user => \n            <div key={user.orderno} className=\"row rowblock rounded\">\n              <div className=\"col-sm-12 col-md-4 padding\"><strong className=\"title\">Order Name</strong>: <i className=\"fas fa-paperclip\"></i> <a href=\"#\" onClick={(event) => this.displayData(user, event)} className=\"\" role=\"button\">{user.order}.</a></div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Items</strong>: {user.items}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Cost</strong>: {user.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Total</strong>: {user.items * user.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Call</strong>: <a href={\"tele:+91\"+user.phone} className=\"\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></div>\n            </div>\n            )}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialogReadOnly user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  displayData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default Home;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport moment from 'moment';\n\nclass Search extends React.Component {\n\n    searchStyle = {\n        fontSize: \"24px\",\n        align: \"right\",\n        textAlign: \"right\",\n        display: \"block\",\n        paddingTop: \"10px\"\n    }\n\n    state = {searchString: ''}\n\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = (e) => {\n        this.setState({searchString: e.target.value});\n    }\n\n    render() {\n        var libraries = this.props.users,\n            searchString = this.state.searchString.trim().toLowerCase();\n        if (searchString.length > 0) {\n            libraries = libraries.filter(function (i) {\n                return i.name.toLowerCase().match(searchString);\n            });\n        }\n        return (\n            <div>\n                <div className='row' style={{marginTop: \"20px\"}}>\n                    <div className='col-sm-3 col-md-3'><i style={this.searchStyle} className=\"fas fa-search\"> Search</i></div>\n                    <div className='col-sm-7 col-md-7'><input type=\"text\" className=\"form-control form-control-lg\"\n                                                     value={this.state.searchString} onChange={this.handleChange}\n                                                     placeholder=\"Type here...\"/></div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12 col-md-12'>\n                        {/*<div className=\"searchContainer col-xl-6 col-md-6\">*/}\n                        {/*</div>*/}\n                        <div className=\"d-flex flex-wrap\">\n                            {libraries.map(user =>\n                                <div\n                                    key={user.orderno}\n                                    className=\"card-deck pt-1 mb3\"\n                                    style={{margin: '0.5rem', width: \"20rem\"}}\n                                    id={user.uid}\n                                >\n                                    <div className=\"card text-dark d-flex align-items-stretch\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\"><span\n                                                className=\"text-danger\">Name: </span> {user.name}</h5>\n                                            <h5 className=\"card-title\"><span\n                                                className=\"\">First Name: </span> {user.fname}, <span\n                                                className=\"\">Last Name: </span> {user.lname}</h5>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order No: </span> {user.orderno}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order: </span> {user.order}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Items: </span>{user.items}, <span\n                                                className=\"\">Price: </span><i\n                                                className=\"fa fa-inr\"></i> {user.price}, </p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Total: </span><i\n                                                className=\"fa fa-inr\"></i> {user.items * user.price}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Email: </span>{user.email}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Mobole: </span>{user.phone}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Start Date: </span>{moment(user.startdate).format('DD/MM/YYYY')}\n                                            </p>\n                                            <button type=\"button\" className=\"btn btn-danger\"\n                                                    onClick={(event) => this.removeData(user, event)}>Delete\n                                            </button>\n                                            <button type=\"button\" className=\"btn btn-primary ml-3\"\n                                                    onClick={(event) => this.editData(user, event)}>Edit\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"update user search file\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({show: false});\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    removeData(user, e) {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", user);\n            this.props.remove(user);\n        }\n    }\n\n    editData(user, e) {\n        e.preventDefault();\n        $(\"#orderModal\").modal({show: true});\n        this.setState({\n            user: user\n        });\n    }\n\n}\n\nexport default Search;\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = { activeId: 1 };\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({ activeId: id })\n    }\n\n    Links = [\n        {name: <i className='fas fa-home'>  Home</i>, path: \"/\", id: 1},\n        {name: <i className='fas fa-th-large'>  Orders</i>, path: \"/olist\", id: 2},\n        // {name: <i className='fas fa-info-circle'>  Details</i> , path: \"/od\", id: 3},\n        {name: <i className='fas fa-search'>  Search</i>, path: \"/ser\", id: 5},\n        {name: <i className='fas fa-plus'>  Add</i>, path: \"/add\", id: 4}\n    ]\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Links.map(link =>\n                            <Link\n                                key={link.id}\n                                to={link.path}\n                                className={this.state.activeId === link.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                onClick={(event) => this.handleClick(event, link.id)}\n                            >\n                                {link.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Search from './search';\nimport Menu from './menu';\nimport NotFound from './notfound';\nimport {Typeahead, Fragment, Control } from 'react-typeahead';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.removeData = this.removeData.bind(this);\n  }\n\n  render() {\n    // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n    const base = process.env.PUBLIC_URL;\n    // console.log(\"base Redirect\", base);\n    return (\n      <Router  basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Orders</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <Menu />\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" render={props => <Home users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/olist\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                {/* <Route exact path=\"/od\" render={props => <OrderDetails users={this.state.users} update={this.updateData} remove={this.removeData} />} /> */}\n                <Route exact path=\"/ser\" render={props => <Search users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                <Route render={(base) => <Redirect to={base} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    console.log('DATA SAVED', this.state);\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, function(){\n        console.log('DATA RETRIEVED Users', this.state.users);\n      });\n    });\n    console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log(\"componentDidUpdate\", prevState, this.state);\n    // only write when it's different with the new state\n    if (prevState.users !== this.state.users) {\n      this.writeUserData();\n      console.log(\"componentDidUpdate, writeUserData\");\n    }\n  }\n\n  addData = user => {\n    // console.log(\"This State Data\", this.state.users);\n    if (user) {\n      const { users } = this.state;\n      console.log('users Data', users);\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n\n  removeData = (user) => {\n    if(user){\n      const { users } = this.state;\n      const newState = users.filter(data => {\n        return data.uid !== user.uid;\n      });\n      if(users !== newState){\n        this.setState({ users: newState });\n      }\n      console.log(\"Updated Users state\");\n    }\n  }\n\n  updateData = (user) => {\n    console.log(\"updateData fun in app.js\", user);\n    if(user){\n      console.log(\"if user in app.js\");\n      let name = user.name;\n      let email = user.email;\n      let phone = user.phone;\n      let order = user.order;\n      let orderno = user.orderno;\n      let items = user.items;\n      let price = user.price;\n      let uid = user.uid;\n      let startdate = user.startdate\n      const condition = ( name && email && phone && order && orderno && items && price && startdate);\n      if (uid && condition) {\n        console.log(\"Update condition met\");\n        const { users } = this.state;\n        const devIndex = users.findIndex(user => {\n          return user.uid === uid\n        });\n        console.log(\"devIndex\", devIndex);\n        users[devIndex].name = name;\n        users[devIndex].email = email;\n        users[devIndex].phone = phone;\n        users[devIndex].order = order;\n        users[devIndex].orderno = orderno;\n        users[devIndex].items = items;\n        users[devIndex].price = price;\n        users[devIndex].startdate = startdate;\n        this.setState({ users: users });\n      }\n    console.log(\"Updateed State appjs\", this.state.users);\n  }\n}\n}\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}