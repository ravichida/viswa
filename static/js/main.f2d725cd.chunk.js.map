{"version":3,"sources":["config.js","update.js","modalDialog.js","orderdetailslist.js","orderdetails.js","addorder.js","updateReadOnly.js","modalDialogReadOnly.js","home.js","search.js","menu.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","InditialStateObj","user","uid","name","email","phone","order","orderno","items","price","total","startdate","startDate","selectedDay","handleDayChange","setState","state","moment","format","updateField","e","preventDefault","target","type","checked","value","updateChange","event","update","resetForm","baseState","bind","React","createRef","nextProps","this","className","ref","readOnly","placeholder","onChange","overlayComponent","CustomOverlay","onDayChange","onClick","data-toggle","data-target","data-show","Component","classNames","children","overlayWrapper","style","marginTop","marginLeft","overlay","ModalDialog","updateList","modalClose","$","modal","id","role","data-dismiss","remove","removeData","close","OrderDetailsList","sortUsers","editData","updateApp","write","width","users","map","key","show","console","log","AddOrder","Date","handleChange","date","orderNumber","sortedUsers","i","length","sort","a","b","highestOrder","parseInt","addUser","refs","condition","devIndex","findIndex","data","getTime","toString","action","add","String","max","selected","UpdateReadOnly","updateBtn","showUpdateBtn","readonly","fname","ModalDialogReadOnly","Home","displayData","href","Search","searchStyle","fontSize","align","textAlign","display","paddingTop","searchString","libraries","trim","toLowerCase","filter","match","dflex","margin","maxWidth","lname","Menu","Links","path","activeId","links","location","window","pathname","link","to","handleClick","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","push","newState","updateData","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f2d725cd.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\nimport moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"../node_modules/react-day-picker/lib/style.css\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Update extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.startdate = React.createRef();\n\n        this.state = this.InditialStateObj;\n\n        this.baseState = this.state;\n\n    }\n\n    InditialStateObj = {\n        user: {\n            uid: '',\n            name: '',\n            email: '',\n            phone: '',\n            order: '',\n            orderno: '',\n            items: 0,\n            price: 0,\n            total: 0,\n            startdate: \"\"\n        },\n        startDate: \"\",\n        selectedDay: \"\"\n    }\n\n\n    handleDayChange = selectedDay => {\n        this.setState({ \n            user: {\n                ...this.state.user,\n                startdate: moment(selectedDay).format()\n            }\n            // selectedDay: moment(selectedDay).format(),\n            // user: {startdate: moment(selectedDay).format()}\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(\"NP Updated\");\n        if (this.props.user !== nextProps.user) {\n            this.setState({\n                user: nextProps.user,\n                // selectedDay: nextProps.user.startdate\n            });\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            // console.log(\"update user\", this.state.user);\n            this.props.update(this.state.user);\n            /*if (window.confirm('Please click OK to close the window?')) {\n                console.log(\"dialog-close-update.js\");\n                this.props.close();\n            }*/\n        }\n        // this.resetForm();\n    }\n\n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n\n\n    render() {\n        return (\n            <div className='row'>\n                {/* <div className='col-xl-12'>\n                    {JSON.stringify(this.props.user, null, 2)}\n                </div> */}\n                <div className='col-xl-12'>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                {/*<input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />*/}\n                                <input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly className=\"form-control\" placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.name} value={this.state.user.name || ''} onChange={(e) => this.updateField(\"name\", e)} className=\"form-control\" placeholder=\"Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date </label>\n                                    <DayPickerInput\n                                        overlayComponent={CustomOverlay}\n                                        className=\"form-control\"\n                                        name=\"birthday\"\n                                        placeholder=\"DD/MM/YYYY\"\n                                        format=\"DD/MM/YYYY\"\n                                        // value={moment(this.state.selectedDay).format('DD/MM/YYYY')}\n                                        value={moment(this.state.user.startdate).format('DD/MM/YYYY')}\n                                        onDayChange={this.handleDayChange}\n                                    />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"number\" ref={this.phone} value={(this.state.user.items * this.state.user.price) || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Total\" />\n                            </div>\n                            {/* <div className=\"form-group col-md-6\">\n                                <div>\n                                    <p>\n                                        this.state.selectedDay : {moment(this.state.selectedDay).format()}\n                                    </p>\n                                    <p>\n                                        this.state.user.startdate : {this.state.user.startdate}\n                                    </p>\n                                </div>\n                            </div> */}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                        {/*<button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-show=\"false\">Save</button>*/}\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\nfunction CustomOverlay({ classNames, selectedDay, children, ...props }) {\n    let overlayMargin = {\n        marginTop: -200,\n        marginLeft: 100,\n    }\n    return (\n        <div\n            className={classNames.overlayWrapper}\n            // style={{ marginTop: -200 }}\n            style={overlayMargin}\n            {...props}\n        >\n            <div className={classNames.overlay}>\n                {/* <h3>Hello day picker!</h3> */}\n                {/* <p>\n            <input />\n            <button onClick={() => console.log('clicked!')}>button</button>\n          </p> */}\n                {/* <p>\n            {selectedDay\n              ? `You picked: ${selectedDay.toLocaleDateString()}`\n              : 'Please pick a day'}\n          </p> */}\n                {children}\n            </div>\n        </div>\n    );\n}\n\nCustomOverlay.propTypes = {\n    classNames: PropTypes.object.isRequired,\n    selectedDay: PropTypes.instanceOf(Date),\n    children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport Update from './update';\nimport $ from 'jquery';\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      // console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  modalClose = () => {\n    // console.log(\"modal-dialog-js\");\n    $('#orderModal').modal('hide');\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"90%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Update Order</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <Update user={this.props.user}\n                          remove={this.removeData}\n                          update={this.updateList}\n                          close={this.modalClose}\n                  />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass OrderDetailsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sortUsers = this.sortUsers.bind(this);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details List</h4>\n            <table className=\"table table-striped olistTable\">\n              <tbody>\n                <tr>\n                  <th width=\"7%\">Order</th>\n                  <th width=\"20%\">Order Name</th>\n                  <th width=\"20%\">Customer Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Edit</th>\n                  <th>Delete</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.orderno} style={{}}>\n                        <td className=\"\">{user.orderno}</td>\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.name}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.items * user.price}</td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-primary\" onClick={(event) => this.editData(user, event)}>Edit</button></td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table>\n          </div>\n          {/* <div className='col-xl-12'>\n            {JSON.stringify(this.props.users, null, 4)}\n          </div> */}\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  sortUsers(users) {\n\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      // console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false });\n      $(\".modal-backdrop\").remove();\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n\n}\nexport default OrderDetailsList;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n        this.state = {\n            user: {},\n            searchUsers: {}\n        }\n    }\n\n    removeData(user) {\n        if (typeof (this.props.remove) === 'function') {\n            this.props.remove(user);\n        }\n    }\n\n    render() \n    {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Search Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.orderno} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }} id={user.uid}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"text-danger\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={(event) => this.editData(user, event)}>Edit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    updateSearch(user){\n        console.log(\"updateSearch usr\", user);\n\n    }\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false });\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    editData(user, e) {\n        console.log(\"editdata fun\");\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;\n\n","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.orderNumber = this.orderNumber.bind(this);\n        this.state = {\n            users: [],\n          };\n    }\n\n    state = {\n        startDate: new Date()\n      };\n    \n      handleChange = date => {\n        this.setState({\n          startDate: date\n        });\n      };\n\n    render() {\n\n        var newOrderNumber = this.orderNumber(this.props.users);\n\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n                {/*\n                {JSON.stringify(this.props.users,null, 2)}\n                {sortedUsers}<br />\n                {highestOrder}<br />\n                {newOrderNumber}<br />\n                */}\n            </div>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"number\" ref='orderno' className=\"form-control\" value={String(this.orderNumber(this.props.users))} readOnly placeholder=\"Oder No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Order Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\"  max={999999999999} ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Date</label>\n                    <DatePicker className=\"form-control react-datepicker__input-container\" selected={this.state.startDate} ref='startdate' onChange={this.handleChange} />\n                </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            {/* <div><pre>{JSON.stringify(newOrderNumber, null, 2) }</pre></div> */}\n            </div>\n        </div>\n      )\n    }\n\n    orderNumber = function(users) {\n            let sortedUsers = [];\n            for(let i=0; i<users.length; i++) {\n                sortedUsers[i] = users[i].orderno;\n            }\n            sortedUsers.sort(function(a, b){return a - b});\n            let highestOrder = sortedUsers[sortedUsers.length-1];\n            let orderNumber = parseInt(highestOrder)+1;\n            return orderNumber;\n    }\n  \n    addUser = (event) => {\n        console.log(\"Added form details\");\n        let orderno = parseInt(this.refs.orderno.value);\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let uid = this.refs.uid.value;\n        let startDate = this.state.startDate\n        const condition = (name && email && phone && order && orderno && items && price && startDate);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].orderno = orderno;\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].items = parseInt(items);\n          users[devIndex].price = parseInt(price);\n          // users[devIndex].total = parseInt(items) * parseInt(price);\n          users[devIndex].startdate = startDate;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"name\": name,\n                \"email\": email,\n                \"phone\": phone,\n                \"order\": order,\n                \"orderno\": parseInt(orderno),\n                \"items\": parseInt(items),\n                \"price\": parseInt(price),\n                \"uid\": parseInt(uid),\n                \"startdate\": startDate.toString()\n                }\n            this.props.action(user);\n            console.log(\"action user\", user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.startdate.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"items\": \"200\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": 0,\n            \"date\": \"03/4/20\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;\n","import React from 'react';\nimport moment from \"moment\";\n\nclass UpdateReadOnly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { readonly: true };\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                name: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            },\n            showUpdateBtn: false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        /* if (typeof this.props.update === 'function') {\n            let user = {};\n            this.props.update(user);\n        } */\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn: !this.state.showUpdateBtn,\n            readonly: \"readonly\"\n        });\n    }\n\n    render() {\n        // console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Order Details</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.items * this.state.user.price || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date</label>\n                                <input type=\"text\" ref={this.startdate} value={this.state.user.startdate ? moment(this.state.user.startdate).format('DD/MM/YYYY') : null || ''} onChange={(e) => this.updateField(\"startdate\", e)} className=\"form-control\" placeholder=\"Date\" readOnly />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n        if (this.state.readonly) {\n            return (\n                <UpdateBtn />\n            );\n        }\n        return (\n            <UpdateBtn />\n        );\n    }\n}\nexport default UpdateReadOnly;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\n","import React from 'react';\nimport UpdateReadOnly from './updateReadOnly'\nclass ModalDialogReadOnly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <UpdateReadOnly user={this.props.user} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialogReadOnly;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport ModalDialogReadOnly from './modalDialogReadOnly';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayData = this.displayData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          {/* <div className='myst'>Orders</div> */}\n            <h4 className='my-3'>Orders List</h4>\n            {this.props.users.map(user => \n            <div key={user.orderno} className=\"row rowblock rounded\">\n              <div className=\"col-sm-12 col-md-4 padding\"><strong className=\"title\">Order Name</strong>: <i className=\"fas fa-paperclip\"></i> <a href=\"#\" onClick={(event) => this.displayData(user, event)} className=\"\" role=\"button\">{user.order}.</a></div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Items</strong>: {user.items}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Cost</strong>: {user.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Total</strong>: {user.items * user.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Call</strong>: <a href={\"tele:+91\"+user.phone} className=\"\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></div>\n            </div>\n            )}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialogReadOnly user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  displayData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default Home;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport moment from 'moment';\n\nclass Search extends React.Component {\n\n    searchStyle = {\n        fontSize: \"24px\",\n        align: \"right\",\n        textAlign: \"right\",\n        display: \"block\",\n        paddingTop: \"10px\"\n    }\n\n    state = {searchString: ''}\n\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        // this.dflex = React.createRef();\n    }\n\n    /*componentDidMount() {\n        const width = this.dflex.current.clientWidth;\n        let totalElements = Math.round(width / 336) || 0;\n        console.log(\"totalElements \", totalElements);\n        let totalMargin = width - (totalElements * 336) || 0;\n        console.log(\"totalMargin \", totalMargin);\n        let marginLeft = Math.abs(Math.round(totalMargin / (totalElements * 2))) || 0;\n        let marginRight = Math.abs(Math.round(totalMargin / (totalElements * 2))) || 0;\n        console.log(\"marginLeft \", marginLeft);\n        console.log(\"marginRight \", marginRight);\n        this.setState(\n            {\n                width: width,\n                marginLeft: marginLeft,\n                marginRight: marginRight\n            },\n            () => console.log(this.state.width)\n        );\n\n    }*/\n\n    handleChange = (e) => {\n        this.setState({searchString: e.target.value});\n    }\n\n    render() {\n        var libraries = this.props.users,\n            searchString = this.state.searchString.trim().toLowerCase();\n        if (searchString.length > 0) {\n            libraries = libraries.filter(function (i) {\n                return i.name.toLowerCase().match(searchString);\n            });\n        }\n        return (\n            <div>\n                <div className='row' style={{marginTop: \"20px\"}}>\n                    <div className='col-sm-3 col-md-3'><i style={this.searchStyle} className=\"fas fa-search\"> Search</i></div>\n                    <div className='col-sm-7 col-md-7'><input type=\"text\" className=\"form-control form-control-lg\"\n                                                     value={this.state.searchString} onChange={this.handleChange}\n                                                     placeholder=\"Type here...\"/></div>\n                </div>\n                <div className='row'>\n                    <div className='col-sm-12 col-md-12' ref={this.dflex}>\n                        {/*<div className=\"searchContainer col-xl-6 col-md-6\">*/}\n                        {/*</div>*/}\n                        <div className=\"d-flex flex-wrap justify-content-center\">\n                            {libraries.map(user =>\n                                <div\n                                    key={user.orderno}\n                                    className=\"card-deck pt-1 mb3\"\n                                    style={{margin: \"0.5rem auto\", width: \"336px\"}}\n                                    id={user.uid}\n                                >\n                                    <div className=\"card text-dark d-flex align-items-stretch\" style={{maxWidth: \"336px\"}}>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\"><span\n                                                className=\"text-danger\">Name: </span> {user.name}</h5>\n                                            <h5 className=\"card-title\"><span\n                                                className=\"\">First Name: </span> {user.fname}, <span\n                                                className=\"\">Last Name: </span> {user.lname}</h5>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order No: </span> {user.orderno}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order: </span> {user.order}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Items: </span>{user.items}, <span\n                                                className=\"\">Price: </span><i\n                                                className=\"fa fa-inr\"></i> {user.price}, </p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Total: </span><i\n                                                className=\"fa fa-inr\"></i> {user.items * user.price}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Email: </span>{user.email}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Mobole: </span>{user.phone}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Start Date: </span>{moment(user.startdate).format('DD/MM/YYYY')}\n                                            </p>\n                                            <button type=\"button\" className=\"btn btn-danger\"\n                                                    onClick={(event) => this.removeData(user, event)}>Delete\n                                            </button>\n                                            <button type=\"button\" className=\"btn btn-primary ml-3\"\n                                                    onClick={(event) => this.editData(user, event)}>Edit\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"update user search file\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({show: false});\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    removeData(user, e) {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", user);\n            this.props.remove(user);\n        }\n    }\n\n    editData(user, e) {\n        e.preventDefault();\n        $(\"#orderModal\").modal({show: true});\n        this.setState({\n            user: user\n        });\n    }\n\n}\n\nexport default Search;\n\n","import React from 'react';\nimport {Link,} from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    Links = [\n        {name: <i className='fas fa-home'> Home</i>, path: \"/\", id: 1},\n        {name: <i className='fas fa-th'> Orders</i>, path: \"/orders\", id: 2},\n        // {name: <i className='fas fa-info-circle'>  Details</i> , path: \"/od\", id: 3},\n        {name: <i className='fas fa-search'> Search</i>, path: \"/search\", id: 5},\n        {name: <i className='fas fa-plus'> Add</i>, path: \"/add\", id: 4}\n    ]\n\n    constructor(props) {\n        super(props);\n\n        this.state = {activeId: 1};\n    }\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({activeId: id})\n    }\n\n    componentDidMount(links) {\n        // console.log(\"menu.js\", window.location.pathname);\n        let location = window.location.pathname;\n        this.Links.map(link => {\n            if (location === link.path) {\n                this.setState({activeId: link.id});\n                // console.log(\"active id\", link.path, link.id);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Links.map(link =>\n                            <Link\n                                key={link.id}\n                                to={link.path}\n                                className={this.state.activeId === link.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                onClick={(event) => this.handleClick(event, link.id)}\n                            >\n                                {link.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useHistory ,useLocation } from 'react-router-dom';\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Search from './search';\nimport Menu from './menu';\nimport NotFound from './notfound';\nimport {Typeahead, Fragment, Control } from 'react-typeahead';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.removeData = this.removeData.bind(this);\n  }\n    /*componentDidMount() {\n      let location = window.location.pathname;\n      console.log(\"app.js-cdm\", location);\n  }\n\n    componentWillReceiveProps(nextProps) {\n      console.log(\"app-cwrp\", window.location.pathname);\n      if (nextProps.location !== this.props.location) {\n        // navigated!\n      }\n    }*/\n\n\n  render() {\n    // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n    const base = process.env.PUBLIC_URL;\n    // console.log(\"base Redirect\", base);\n    return (\n      <Router  basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Orders</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <Menu location={window.location.path} />\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" render={props => <Home users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/orders\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                {/* <Route exact path=\"/od\" render={props => <OrderDetails users={this.state.users} update={this.updateData} remove={this.removeData} />} /> */}\n                <Route exact path=\"/search\" render={props => <Search users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                <Route render={(base) => <Redirect to={base} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    // console.log('DATA SAVED', this.state);\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, function(){\n        // console.log('DATA RETRIEVED Users', this.state.users);\n      });\n    });\n    // console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log(\"componentDidUpdate\", prevState, this.state);\n    // only write when it's different with the new state\n    if (prevState.users !== this.state.users) {\n      this.writeUserData();\n      // console.log(\"componentDidUpdate, writeUserData\");\n    }\n  }\n\n  addData = user => {\n    // console.log(\"This State Data\", this.state.users);\n    if (user) {\n      const { users } = this.state;\n      // console.log('users Data', users);\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n\n  removeData = (user) => {\n    if(user){\n      const { users } = this.state;\n      const newState = users.filter(data => {\n        return data.uid !== user.uid;\n      });\n      if(users !== newState){\n        this.setState({ users: newState });\n      }\n      // console.log(\"Updated Users state\");\n    }\n  }\n\n  updateData = (user) => {\n    // console.log(\"updateData fun in app.js\", user);\n    if(user){\n      // console.log(\"if user in app.js\");\n      let name = user.name;\n      let email = user.email;\n      let phone = user.phone;\n      let order = user.order;\n      let orderno = user.orderno;\n      let items = user.items;\n      let price = user.price;\n      let uid = user.uid;\n      let startdate = user.startdate\n      const condition = ( name && email && phone && order && orderno && items && price && startdate);\n      if (uid && condition) {\n        // console.log(\"Update condition met\");\n        const { users } = this.state;\n        const devIndex = users.findIndex(user => {\n          return user.uid === uid\n        });\n        // console.log(\"devIndex\", devIndex);\n        users[devIndex].name = name;\n        users[devIndex].email = email;\n        users[devIndex].phone = phone;\n        users[devIndex].order = order;\n        users[devIndex].orderno = orderno;\n        users[devIndex].items = items;\n        users[devIndex].price = price;\n        users[devIndex].startdate = startdate;\n        this.setState({ users: users });\n      }\n    // console.log(\"Updated State appjs\", this.state.users);\n  }\n}\n}\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n// Prevent unused variable warnings\nwhile (false) {\n    console.log(App) && console.log(React) && console.log(ReactDOM)\n}\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}