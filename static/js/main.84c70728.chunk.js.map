{"version":3,"sources":["config.js","orderdetails.js","update.js","modalDialog.js","orderdetailslist.js","addorder.js","home.js","App.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","OrderDetails","props","className","this","users","map","user","key","uid","style","width","margin","name","orderno","order","items","price","total","email","phone","onClick","removeData","updateData","React","Component","Update","updateField","e","preventDefault","setState","state","target","type","checked","value","handleFormChange","event","update","bind","createRef","fname","lname","nextProps","ref","onChange","placeholder","data-toggle","data-target","data-show","ModalDialog","id","role","data-dismiss","OrderDetailsList","$","modal","show","AddOrder","addUser","console","log","refs","parseInt","toLocaleString","condition","devIndex","findIndex","data","Date","getTime","toString","action","add","Home","process","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","push","newState","filter","initializeApp","basename","href","exact","path","component","render","prevProps","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84c70728.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\n\nclass OrderDetails extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return (\n            <div className='row'>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details</h4>\n                { \n                this.props.users\n                    .map(user => \n                        <div key={user.uid} className=\"card float-left\" style={{width: '24rem', margin: '1rem'}}>\n                            <div className=\"card-body\">\n                            <h5 className=\"card-title\"><span className=\"smallName\">Name: </span> { user.name}</h5>\n                            <p className=\"card-text\"><span className=\"smallName\">Order No: </span> { user.orderno }</p>\n                            <p className=\"card-text\"><span className=\"smallName\">Order: </span> { \" \" + user.order + \" # \" + user.items + \" Nos\" }</p>\n                            <p className=\"card-text\"><strong>Items: </strong>{ user.items }, <strong>Price: </strong><i className=\"fa fa-inr\"></i> { user.price }, <strong>Total: </strong><i className=\"fa fa-inr\"></i> { user.total }</p>\n                            <p className=\"card-text\"><span className=\"smallName\">Email: </span>{ user.email }</p>\n                            <p className=\"card-text\"><span className=\"smallName\">Mobole: </span>{ user.phone }</p>\n                            <button onClick={ () => this.removeData(user) } className=\"btn btn-link\">Delete</button>\n                            <button onClick={ () => this.updateData(user) } className=\"btn btn-link\">Edit</button>\n                            </div>\n                        </div>\n                    )\n                } \n            </div>\n            </div>\n        )\n    }\n}\n\nexport default OrderDetails;","import React from 'react';\n\nclass Update extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFormChange = this.handleFormChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.fname = React.createRef();\n        this.lname = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                fname: '',\n                lname: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            }\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    handleFormChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            let user = this.state.user;\n            this.props.update(user);\n        }\n        // this.props.update(this.state.user);\n        // console.log(\"Update form details\", this.state.user);\n    }\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Update Order</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} className=\"form-control\" onChange={(e) => this.updateField(\"orderno\", e)} placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.total || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>First Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Last Name</label>\n                                <input type=\"text\" ref={this.lname} value={this.state.user.lname || ''} onChange={(e) => this.updateField(\"lname\", e)} className=\"form-control\" placeholder=\"Last Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleFormChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;","import React from 'react';\nimport Update from './update'\nclass ModalDialog extends React.Component {\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                <Update user={this.props.user} update={this.props.update} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React, { useState } from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass OrderDetailsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateData = this.updateData.bind(this);\n    this.state = {\n      user: {\n        uid: '',\n        fname: '',\n        lname: '',\n        email: '',\n        phone: '',\n        order: '',\n        orderno: '',\n        items: '',\n        price: '',\n        total: ''\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details List</h4>\n            <table className=\"table table-striped\">\n              <tbody>\n                <tr>\n                  <th width=\"7%\">Order No</th>\n                  <th width=\"20%\">Order</th>\n                  <th width=\"20%\">Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Delete</th>\n                  <th>Edit</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.uid} style={{}}>\n                        <td className=\"\">{user.orderno}</td>\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.name}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.total}</td>\n                        <td className=\"\"><button onClick={() => this.removeData(user)} className=\"btn btn-link\">Delete</button></td>\n                        <td className=\"\"><button onClick={() => this.updateData(user)} className=\"btn btn-link\">Edit</button></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.props.update, $(\"#orderModal\").modal({ show: false })} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateData(user) {\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n    // console.log(\"odList user\", this.state.user);\n    // console.log(\"param user\", user);\n  }\n}\nexport default OrderDetailsList;","import React from 'react';\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            users: [],\n          };\n    }\n    \n    render() {\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"text\" ref='orderno' className=\"form-control\" placeholder=\"Oder No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Oder Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Total</label>\n                    <input type=\"text\" ref='total' className=\"form-control\" placeholder=\"Total Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>First Name</label>\n                    <input type=\"text\" ref='fname' className=\"form-control\" placeholder=\"First Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Last Name</label>\n                    <input type=\"text\" ref='lname' className=\"form-control\" placeholder=\"Last Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\" ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            {/* <div><pre>{JSON.stringify(this.state, null, 2) }</pre></div> */}\n            </div>\n        </div>\n      )\n    }\n\n    addUser = (event) => {\n        console.log(\"Added form details\");\n        event.preventDefault();\n        let fname = this.refs.fname.value;\n        let lname = this.refs.lname.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let orderno = this.refs.orderno.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let name = fname + \" \" + lname;\n        let total = ( parseInt(items) * parseInt(price)).toLocaleString('en-IN');\n        let uid = this.refs.uid.value;\n        const condition = (fname && lname && name && email && phone && order && orderno && items && price && total);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].fname = fname;\n          users[devIndex].lname = lname;\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].orderno = orderno;\n          users[devIndex].items = items;\n          users[devIndex].price = price;\n          users[devIndex].total = total;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"email\": email,\n                \"fname\": fname,\n                \"items\": items,\n                \"lname\": lname,\n                \"name\": name,\n                \"order\": order,\n                \"orderno\": orderno,\n                \"phone\": phone,\n                \"price\": price,\n                \"total\": total,\n                \"uid\": uid\n                }\n            this.props.action(user);\n            console.log(user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.fname.value = '';\n        this.refs.lname.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.orderno.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.total.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"fname\": \"Ravi\",\n            \"items\": \"200\",\n            \"lname\": \"Test\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": \"10,000\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;","import React from 'react';\n\nclass Home extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>Home page</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Update from './update';\nimport Home from './home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n  }\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Order Details</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item active\"><a href=\"/\" className=\"nav-link\">Home</a></li>\n                <li className=\"nav-item\"><a href=\"/olist\" className=\"nav-link\">Orders</a></li>\n                <li className=\"nav-item\"><a href=\"/od\" className=\"nav-link\">Order Details</a></li>\n                <li className=\"nav-item\"><a href=\"/add\" className=\"nav-link\">Add Order</a></li>\n                <li className=\"nav-item\"><a href=\"/update\" className=\"nav-link\">Update Order</a></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/olist\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} />} />\n                <Route path=\"/od\" render={props => <OrderDetails users={this.state.users} />} />\n                <Route path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                <Route path=\"/update\" render={props => <Update user={this.state.users[6]} update={this.updateData} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    console.log('DATA SAVED');\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state);\n    });\n    console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // check on previous state\n    // only write when it's different with the new state\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  addData = user => {\n    // console.log(\"Add Data\");\n    if (user) {\n      // console.log(user);\n      const { users } = this.state;\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n\n  removeData = (user) => {\n    const { users } = this.state;\n    const newState = users.filter(data => {\n      return data.uid !== user.uid;\n    });\n    this.setState({ users: newState });\n  }\n\n  updateData = (user) => {\n    console.log(\"updateData in app.js\", user);\n    let fname = user.fname;\n    let lname = user.lname;\n    let email = user.email;\n    let phone = user.phone;\n    let order = user.order;\n    let orderno = user.orderno;\n    let items = user.items;\n    let price = user.price;\n    let name = user.name;\n    let total = user.total;\n    let uid = user.uid;\n    const condition = (fname && lname && name && email && phone && order && orderno && items && price && total);\n    if (uid && condition) {\n      console.log(\"Update condition met\");\n      const { users } = this.state;\n      const devIndex = users.findIndex(data => {\n        return data.uid === uid\n      });\n      users[devIndex].fname = fname;\n      users[devIndex].lname = lname;\n      users[devIndex].name = name;\n      users[devIndex].email = email;\n      users[devIndex].phone = phone;\n      users[devIndex].order = order;\n      users[devIndex].orderno = orderno;\n      users[devIndex].items = items;\n      users[devIndex].price = price;\n      users[devIndex].total = total;\n      this.setState({ users });\n    }\n    console.log(\"Update form details from app.js\", this.state.users);\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}