{"version":3,"sources":["config.js","update.js","modalDialog.js","updateReadOnly.js","modalDialogReadOnly.js","home.js","login.js","orderdetails.js","pagenation.js","orders.js","addorder.js","search.js","menu.js","create.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","InditialStateObj","user","uid","name","email","phone","order","orderno","items","price","total","startdate","startDate","selectedDay","handleDayChange","setState","state","moment","format","updateField","e","preventDefault","target","type","checked","value","updateChange","event","update","resetForm","baseState","bind","React","createRef","nextProps","this","className","ref","onChange","placeholder","readOnly","overlayComponent","CustomOverlay","onDayChange","onClick","data-toggle","data-target","data-show","Component","classNames","children","overlayWrapper","style","marginTop","marginLeft","overlay","ModalDialog","updateList","modalClose","$","modal","id","role","data-dismiss","remove","removeData","close","UpdateReadOnly","updateBtn","showUpdateBtn","readonly","date","ModalDialogReadOnly","console","log","Home","displayData","updateApp","write","orders","map","key","href","show","Login","loginFormStyle","maxWidth","handleSubmitClick","emailValue","current","passwordValue","password","window","location","pathname","alert","htmlFor","aria-describedby","Pagenation","handlePageChange","handlePrevious","next","endpage","showPageNo","nextState","previousState","noOfPages","pages","newProps","jsonOrders","setTimeout","Math","ceil","length","i","push","checkPreviousAndNext","checkPrevious","checkNext","pageNo","changePage","aria-label","page","index","handleNext","Orders","createdOrders","slice","endingNo","lastPage","startingNo","minHeight","width","editData","AddOrder","handleChange","orderNumber","users","sortedUsers","sort","a","b","highestOrder","parseInt","addUser","refs","toString","action","add","Date","max","String","selected","Search","searchStyle","fontSize","align","textAlign","display","paddingTop","searchString","libraries","trim","toLowerCase","filter","match","dflex","margin","Menu","Urls","path","activeId","links","last","replace","split","splice","link","linkpath","url","to","handleClick","Create","submitHandle","createData","fromNo","toNo","funcs","newOrders","fromNumber","toNumber","newObj","j","createObj","createDada","formRef","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","newState","data","updateData","devIndex","findIndex","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8e55feee.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\nimport moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"../node_modules/react-day-picker/lib/style.css\";\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Update extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.startdate = React.createRef();\n\n        this.state = this.InditialStateObj;\n\n        this.baseState = this.state;\n\n    }\n\n    InditialStateObj = {\n        user: {\n            uid: '',\n            name: '',\n            email: '',\n            phone: '',\n            order: '',\n            orderno: '',\n            items: 0,\n            price: 0,\n            total: 0,\n            startdate: \"\"\n        },\n        startDate: \"\",\n        selectedDay: \"\"\n    }\n\n\n    handleDayChange = selectedDay => {\n        this.setState({\n            user: {\n                ...this.state.user,\n                startdate: moment(selectedDay).format()\n            }\n            // selectedDay: moment(selectedDay).format(),\n            // user: {startdate: moment(selectedDay).format()}\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(\"NP Updated\");\n        if (this.props.user !== nextProps.user) {\n            this.setState({\n                user: nextProps.user,\n                // selectedDay: nextProps.user.startdate\n            });\n        }\n    }\n\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            // console.log(\"update user\", this.state.user);\n            this.props.update(this.state.user);\n        }\n        // this.resetForm();\n    }\n\n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n\n    render() {\n        return (\n            <div className='row'>\n                {/* <div className='col-xl-12'>\n                    {JSON.stringify(this.props.user, null, 2)}\n                </div> */}\n                <div className='col-xl-12'>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''}/>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.name} value={this.state.user.name || ''}\n                                       onChange={(e) => this.updateField(\"name\", e)} className=\"form-control\"\n                                       placeholder=\"Name\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''}\n                                       onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\"\n                                       placeholder=\"Email\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''}\n                                       onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\"\n                                       placeholder=\"Mobile / Phone No\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''}\n                                       onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\"\n                                       placeholder=\"Oder Name\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                {/*<input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />*/}\n                                <input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly\n                                       className=\"form-control\" placeholder=\"Oder No\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''}\n                                       onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\"\n                                       placeholder=\"Number of Items\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''}\n                                       onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\"\n                                       placeholder=\"Item Cost\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date </label>\n                                <DayPickerInput\n                                    overlayComponent={CustomOverlay}\n                                    className=\"form-control\"\n                                    name=\"birthday\"\n                                    placeholder=\"MM/DD/YYYY\"\n                                    format=\"MM/DD/YYYY\"\n                                    // value={moment(this.state.selectedDay).format('DD/MM/YYYY')}\n                                    value={moment(this.state.user.startdate).format('MM/DD/YYYY')}\n                                    onDayChange={this.handleDayChange}\n                                />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"number\" ref={this.phone}\n                                       value={(this.state.user.items * this.state.user.price) || ''}\n                                       onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\"\n                                       placeholder=\"Total\"/>\n                            </div>\n                            {/* <div className=\"form-group col-md-6\">\n                                <div>\n                                    <p>\n                                        this.state.selectedDay : {moment(this.state.selectedDay).format()}\n                                    </p>\n                                    <p>\n                                        this.state.user.startdate : {this.state.user.startdate}\n                                    </p>\n                                </div>\n                            </div> */}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange}\n                                data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save\n                        </button>\n                        {/*<button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-show=\"false\">Save</button>*/}\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Update;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\nfunction CustomOverlay({classNames, selectedDay, children, ...props}) {\n    let overlayMargin = {\n        marginTop: -200,\n        marginLeft: 100,\n    }\n    return (\n        <div\n            className={classNames.overlayWrapper}\n            // style={{ marginTop: -200 }}\n            style={overlayMargin}\n            {...props}\n        >\n            <div className={classNames.overlay}>\n                {/* <h3>Hello day picker!</h3> */}\n                {/* <p>\n            <input />\n            <button onClick={() => console.log('clicked!')}>button</button>\n          </p> */}\n                {/* <p>\n            {selectedDay\n              ? `You picked: ${selectedDay.toLocaleDateString()}`\n              : 'Please pick a day'}\n          </p> */}\n                {children}\n            </div>\n        </div>\n    );\n}\n\nCustomOverlay.propTypes = {\n    classNames: PropTypes.object.isRequired,\n    selectedDay: PropTypes.instanceOf(Date),\n    children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport Update from './update';\nimport $ from 'jquery';\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof(this.props.update) === 'function') {\n      // console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  modalClose = () => {\n    // console.log(\"modal-dialog-js\");\n    $('#orderModal').modal('hide');\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"90%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Update Order</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <Update user={this.props.user}\n                          remove={this.removeData}\n                          update={this.updateList}\n                          close={this.modalClose}\n                  />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport moment from \"moment\";\n\nclass UpdateReadOnly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { readonly: true };\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            order: {\n                uid: '',\n                name: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            },\n            showUpdateBtn: false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.order !== nextProps.order) {\n            this.setState({ order: nextProps.order })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        /* if (typeof this.props.update === 'function') {\n            let user = {};\n            this.props.update(user);\n        } */\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn: !this.state.showUpdateBtn,\n            readonly: \"readonly\"\n        });\n    }\n\n    render() {\n        // console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    {/*<h4 className='my-3'>Order Details</h4>*/}\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.order.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.order.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.order.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.order.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.order.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.order.items * this.state.order.price || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.name} value={this.state.order.name || ''} onChange={(e) => this.updateField(\"name\", e)} className=\"form-control\" placeholder=\"Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.order.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.order.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date</label>\n                                <input type=\"text\" ref={this.startdate} value={this.state.order.date ? moment(this.state.order.date).format('DD/MM/YYYY') : null || ''} onChange={(e) => this.updateField(\"startdate\", e)} className=\"form-control\" placeholder=\"Date\" readOnly />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n        if (this.state.readonly) {\n            return (\n                <UpdateBtn />\n            );\n        }\n        return (\n            <UpdateBtn />\n        );\n    }\n}\nexport default UpdateReadOnly;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\n","import React from 'react';\nimport UpdateReadOnly from './updateReadOnly'\nclass ModalDialogReadOnly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Order Details</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <UpdateReadOnly order={this.props.order} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialogReadOnly;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport ModalDialogReadOnly from './modalDialogReadOnly';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayData = this.displayData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          {/* <div className='myst'>Orders</div> */}\n            <h4 className='my-3'>Orders</h4>\n            {this.props.orders.map(order =>\n            <div key={order.orderno} className=\"row rowblock rounded\">\n              <div className=\"col-sm-12 col-md-4 padding\"><strong className=\"title\">Order Name</strong>: <i className=\"fas fa-paperclip\"></i> <a href=\"#\" onClick={(event) => this.displayData(order, event)} className=\"\" role=\"button\">{order.order}.</a></div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Items</strong>: {order.items}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Cost</strong>: {order.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Total</strong>: {order.items * order.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Call</strong>: <a href={\"tele:+91\"+order.phone} className=\"\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></div>\n            </div>\n            )}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            {/*{console.log(\"this.state.order\", this.state.order)}*/}\n            <ModalDialogReadOnly order={this.state.order} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  displayData(order, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      order: order\n    });\n  }\n  \n}\nexport default Home;\n","import React from \"react\";\nimport Home from \"./home\";\n\nclass Login extends React.Component {\n    loginFormStyle = {\n        maxWidth: \"500px\"\n    }\n\n    constructor(props) {\n        super(props);\n        // this.handleChange = this.handleChange.bind(this);\n        this.handleSubmitClick = this.handleSubmitClick.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        };\n\n        this.email = React.createRef();\n        this.password = React.createRef();\n\n    }\n\n    /*handleChange = (e) => {\n        console.log(\"Target\", e.target);\n        let {id, value} = e.target;\n        console.log(\"before state\", this.email.current.value, value);\n        if(id === \"email\" || id === \"password\") {\n            this.setState({\n                ...this.state,\n                [id]: this.email.current.value\n            });\n            console.log(\"inside if\", this.state.email, this.state.password);\n        }\n            console.log(\"after state\", this.state.email, this.state.password);\n\n    }*/\n\n    handleSubmitClick = (e) => {\n        e.preventDefault();\n        let emailValue = this.email.current.value;\n        let passwordValue = this.password.current.value;\n\n        console.log(\"Values\", emailValue, passwordValue);\n        if (emailValue === \"ravi.chida@gmail.com\" && passwordValue === \"chida\") {\n            console.log(\"Login OK\");\n            // sendDetailsToServer()\n            window.location.pathname = \"/home\";\n        } else {\n            //JSON.stringify(this.state);\n            alert(\"Email or Password did not match\");\n            console.log(\"Email or Password did not match\");\n        }\n        //window.location.pathname = \"/orders\";\n        // alert(\"not working\");\n    }\n\n    render() {\n        return (<div>\n            <div className='row'>\n                <div className='col-xl-12 pt-3 pb-3'>\n                    <h3>Login</h3>\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <div style={this.loginFormStyle}>\n                        <form>\n                            <div className=\"form-group text-left\">\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                                <input type=\"email\"\n                                       className=\"form-control\"\n                                       id=\"email\"\n                                       ref={this.email}\n                                       aria-describedby=\"emailHelp\"\n                                       placeholder=\"Enter email\"\n                                    // onChange={this.handleChange}\n                                />\n                                {/*<small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with*/}\n                                {/*    anyone else.</small>*/}\n                            </div>\n                            <div className=\"form-group text-left\">\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                <input type=\"password\"\n                                       className=\"form-control\"\n                                       id=\"password\"\n                                       ref={this.password}\n                                       placeholder=\"Password\"\n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-success\"\n                                onClick={this.handleSubmitClick}\n                            >\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>)\n    }\n\n    /*\n    test@test.com\n    test\n    */\n}\n\nexport default Login;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n        this.state = {\n            user: {},\n            searchUsers: {}\n        }\n    }\n\n    removeData(user) {\n        if (typeof (this.props.remove) === 'function') {\n            this.props.remove(user);\n        }\n    }\n\n    render() \n    {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Search Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.orderno} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }} id={user.uid}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"text-danger\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={(event) => this.editData(user, event)}>Edit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    updateSearch(user){\n        console.log(\"updateSearch usr\", user);\n\n    }\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false });\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    editData(user, e) {\n        console.log(\"editdata fun\");\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;\n\n","import React from 'react';\nimport $ from 'jquery';\nimport {Link} from \"react-router-dom\";\n\nclass Pagenation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.handlePrevious = this.handlePrevious.bind(this);\n        this.next = React.createRef()\n        this.state = {\n            endpage: 1,\n            showPageNo: 1,\n            nextState: \"\",\n            previousState: \"\",\n            noOfPages: []\n        }\n    }\n\n    componentDidMount() {\n        this.pages();\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.jsonOrders != this.props.jsonOrders) {\n            this.pages();\n        }\n    }\n\n    pages(){\n        setTimeout(() => {\n            if (this.props.orders !== null) {\n                let endpage = Math.ceil(this.props.jsonOrders.length / 10);\n                // console.log(\"endpage\", endpage);\n                let pages = [];\n                for (let i = 0; i < endpage; i++) {\n                    pages.push(i);\n                }\n                // console.log(pages);\n                this.setState({\n                    endpage: endpage,\n                    noOfPages: pages\n                }, () => {\n                    // console.log(this.state.noOfPages);\n                    this.checkPreviousAndNext();\n                })\n            }\n        }, 300)\n    }\n    checkPreviousAndNext() {\n        this.checkPrevious();\n        this.checkNext();\n    }\n\n    handlePageChange(event, pageNo) {\n        event.preventDefault();\n        this.setState({\n            showPageNo: pageNo\n        }, () => {\n            this.checkPreviousAndNext();\n        })\n        this.props.changePage(pageNo);\n    }\n\n    handlePrevious(event) {\n        event.preventDefault();\n        this.setState({\n            showPageNo: this.state.showPageNo - 1\n        }, () => {\n            // console.log(this.state.showPageNo);\n            this.props.changePage(this.state.showPageNo);\n            this.checkPreviousAndNext();\n        })\n\n    }\n\n    handleNext(event) {\n        event.preventDefault();\n        if (this.state.showPageNo < this.state.endpage) {\n            this.setState({\n                showPageNo: this.state.showPageNo + 1\n            }, () => {\n                this.props.changePage(this.state.showPageNo);\n                this.checkPreviousAndNext();\n                // console.log(\"handleNext if state.showPageNo\", this.state.showPageNo);\n            })\n        }\n\n    }\n\n    checkPrevious() {\n        if (this.state.showPageNo === 1) {\n            this.setState({\n                previousState: \"disabled\"\n            }, () => {\n\n            })\n        } else if (this.state.showPageNo > 1) {\n            this.setState({\n                previousState: \"\"\n            }, () => {\n\n            })\n        }\n    }\n\n    checkNext() {\n        if (this.state.showPageNo === this.state.endpage) {\n            this.setState({\n                nextState: \"disabled\"\n            }, () => {\n                // console.log(\"endpage\", this.state.endpage);\n            })\n        } else if (this.state.showPageNo < this.state.endpage) {\n            this.setState({\n                nextState: \"\"\n            }, () => {\n\n            })\n        }\n    }\n\n    render() {\n        return (\n            <nav aria-label=\"Page navigation\" style={{maxWidth: \"auto\"}}>\n                <ul className=\"pagination\">\n                    {\n                        <li className={`page-item ${this.state.previousState}`}>\n                            <a className=\"page-link\"\n                                // key={\"pga\" + index}\n                                // href=\"\"\n                                // to={url.path}\n                                // className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                               onClick={(event) => this.handlePrevious(event)}\n                            >\n                                Previous\n                            </a>\n                        </li>\n                    }\n                    {\n\n                        this.state.noOfPages.map((page, index) =>\n                            <li className=\"page-item\" key={page}>\n                                <a className=\"page-link\"\n                                   key={page}\n                                    // href=\"\"\n                                    // to={url.path}\n                                    // className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                   onClick={(event) => this.handlePageChange(event, page + 1)}\n                                >\n                                    {page + 1}\n                                </a>\n                            </li>\n                        )\n                    }\n                    {\n                        <li className={`page-item ${this.state.nextState}`} ref={this.next}>\n                            <a className=\"page-link\"\n                                // key={\"pga\" + index}\n                                // href=\"\"\n                                // to={url.path}\n                                // className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                               onClick={(event) => this.handleNext(event)}\n                            >\n                                Next\n                            </a>\n                        </li>\n                    }\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">Previous</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">Next</a></li>*/}\n                </ul>\n            </nav>\n        )\n    }\n\n}\n\nexport default Pagenation;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog';\nimport Pagenation from './pagenation';\nimport axios from 'axios';\n\nclass Orders extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.changePage = this.changePage.bind(this);\n        this.update = this.update.bind(this);\n        this.state = {\n            user: {write: true},\n            pages: [],\n            orders: [],\n            createdOrders: [],\n            jsonOrders: []\n\n        }\n    }\n\n    componentDidMount() {\n        // this.createObj();\n        this.setState((previousState) => ({\n            jsonOrders : this.props.orders\n        }), () => {\n            // console.log(\"this.props.orders\", this.props.orders);\n        });\n        setTimeout(() => {\n            this.setState((previousState) => ({\n                orders: this.state.jsonOrders.slice(0,10)\n            }), () => {\n                // console.log(this.state.orders);\n                // console.log(\"this.state.orders\", this.state.orders);\n            });\n        }, 100);\n\n        // axios.get(`http://localhost:3000/viswa/orders.json`)\n        // axios.get(`/viswa/orders.json`)\n        /*axios.get(`/viswa/orders.json`)\n            .then(res => {\n                let orders = res.data;\n                orders.sort(function(a, b){return a.orderno - b.orderno});\n                console.log(\"sort\", orders);\n                this.setState(\n                    {\n                        jsonOrders: orders\n                    },\n                    () => {\n                        // window.orders = orders;\n                        // console.log(\"axios created Orders\", this.state.jsonOrders.length);\n                    });\n            })*/\n    }\n    componentWillReceiveProps(newProps) {\n        if( newProps.orders != this.props.orders ) {\n            // console.log(\"this.props.orders\", this.props.orders);\n            setTimeout(() => {\n                this.setState((previousState) => ({\n                    jsonOrders : this.props.orders\n                }), () => {\n                    // console.log(\"this.props.orders\", this.props.orders);\n                    this.setState({\n                        orders: this.state.jsonOrders.slice(0,10)\n                    });\n                });\n            }, 100)\n        }\n    }\n\n    /*shouldComponentUpdate(nextProps, nextState) {\n        return this.state.pages.length != nextState.pages.length\n            // console.log(\"Props changed\");\n\n    }*/\n\n    changePage(pageNo) {\n        let jsonOrders = [...this.state.jsonOrders];\n        let lastPage = Math.ceil(this.state.jsonOrders.length / 10);\n        let startingNo = pageNo === 1 ? 0 : (pageNo -1) * 10;\n        let endingNo;\n        // console.log(\"pageNo\", pageNo);\n        if(pageNo === 1){\n            endingNo = (pageNo * 10);\n        }else if(pageNo * 10 < this.state.jsonOrders.length){\n            endingNo = (pageNo * 10);\n        }else if(pageNo === lastPage){\n            endingNo = this.state.jsonOrders.length;\n        }\n\n        if((startingNo => 0) && !!endingNo)\n        {\n            // console.log(\"startingNo && endingNo\", startingNo, endingNo);\n            let orders = this.state.jsonOrders.slice(startingNo, endingNo);\n            this.setState({\n                orders: [...orders]\n            }, () => {\n                // console.log(\"page orders\", this.state.orders);\n            });\n        }\n    }\n\n    update(order) {\n        if (typeof(order) === 'object' && typeof(this.props.update) === 'function') {\n            // console.log(\"update user search file\", order);\n            this.props.update(order);\n            $(\"#orderModal\").modal({show: false});\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    removeData(order, e)\n    {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", order);\n            this.props.remove(order);\n        }\n    }\n\n    editData(order, e)\n    {\n        e.preventDefault();\n        $(\"#orderModal\").modal({show: true});\n        this.setState({\n            user: order\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12' style={{minHeight: \"25rem\"}}>\n                        <h4 className='my-3'>Orders</h4>\n                        <table className=\"table table-striped olistTable\">\n                            <tbody>\n                            <tr>\n                                <th width=\"7%\">Order</th>\n                                <th width=\"20%\">Order Name</th>\n                                <th width=\"20%\">Customer Name</th>\n                                <th>Items</th>\n                                <th>Cost</th>\n                                <th>Total</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                            {\n                                this.state.orders.map(order =>\n                                    <tr key={order.orderno} style={{}}>\n                                        <td className=\"\">{order.orderno}</td>\n                                        <td className=\"\">{order.order}</td>\n                                        <td className=\"\">{order.name}</td>\n                                        <td className=\"\">{order.items}</td>\n                                        <td className=\"\">{order.price}</td>\n                                        <td className=\"\">{order.items * order.price}</td>\n                                        <td className=\"\">\n                                            <button type=\"button\" className=\"btn btn-primary\"\n                                                    onClick={(event) => this.editData(order, event)}>Edit\n                                            </button>\n                                        </td>\n                                        <td className=\"\">\n                                            <button type=\"button\" className=\"btn btn-danger\"\n                                                    onClick={(event) => this.removeData(order, event)}>Delete\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                    {/*{<div className='col-xl-12'>\n                        {JSON.stringify(this.state.users, null, 4)}\n                    </div>}*/}\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12 d-flex justify-content-center'>\n                        <Pagenation\n                            jsonOrders={this.state.jsonOrders}\n                            changePage={this.changePage}\n                        />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog\n                            user={this.state.user}\n                            update={this.update}\n                        />\n                        <div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Orders;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass AddOrder extends React.Component {\n    constructor(props) {\n        super(props);\n        this.orderNumber = this.orderNumber.bind(this);\n        this.state = {\n            users: [],\n            startDate: new Date()\n        };\n        /*this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.startdate = React.createRef();*/\n    }\n\n    handleChange = date => {\n        this.setState({\n            startDate: date\n        });\n    };\n\n    render() {\n\n        var newOrderNumber = this.orderNumber(this.props.users);\n\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    {/*\n                {JSON.stringify(this.props.users,null, 2)}\n                {sortedUsers}<br />\n                {highestOrder}<br />\n                {newOrderNumber}<br />\n                */}\n                </div>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Add Order</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref='uid'/>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" max={999999999999} ref='phone' className=\"form-control\"\n                                       placeholder=\"Mobile / Phone No\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Order Name</label>\n                                <input type=\"text\" ref=\"order\" className=\"form-control\" placeholder=\"Oder Name\"/>\n                                <div className=\"danger\"></div>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"number\" ref=\"orderno\" className=\"form-control\"\n                                       value={String(this.orderNumber(this.props.users))} readOnly\n                                       placeholder=\"Oder No\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref=\"items\" className=\"form-control\"\n                                       placeholder=\"Number of Items\"/>\n                                <div className=\"danger\"></div>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref=\"price\" className=\"form-control\" placeholder=\"Item Cost\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date</label>\n                                <DatePicker className=\"form-control react-datepicker__input-container\"\n                                            selected={this.state.startDate} ref='startdate'\n                                            onChange={this.handleChange}/>\n                            </div>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addUser}>Save</button>\n                    </form>\n                    {/* <div><pre>{JSON.stringify(newOrderNumber, null, 2) }</pre></div> */}\n                </div>\n            </div>\n        )\n    }\n\n    orderNumber = function (users) {\n        let sortedUsers = [];\n        if (users.length !== 0) {\n            for (let i = 0; i < users.length; i++) {\n                sortedUsers[i] = users[i].orderno;\n            }\n            sortedUsers.sort(function (a, b) {\n                return a - b\n            });\n            let highestOrder = sortedUsers[sortedUsers.length - 1];\n            let orderNumber = parseInt(highestOrder) + 1;\n            return orderNumber;\n        } else {\n            return 3001\n        }\n    }\n\n    addUser = (event) => {\n        // console.log(\"Added form details\");\n        let orderno = parseInt(this.refs.orderno.value);\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let uid = parseInt(this.refs.orderno.value);\n        let startDate = this.state.startDate\n        const condition = (name && email && phone && order && orderno && items && price && startDate);\n        if (!!uid) {\n            // const uid = new Date().getTime().toString();\n            const user = {\n                \"name\": name,\n                \"email\": email,\n                \"phone\": phone,\n                \"order\": order,\n                \"orderno\": parseInt(orderno),\n                \"items\": parseInt(items),\n                \"price\": parseInt(price),\n                \"uid\": parseInt(uid),\n                \"date\": startDate.toString()\n            }\n            this.props.action(user);\n            // console.log(\"action user\", user);\n        }\n\n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.startdate.value = '';\n    }\n\n    add = () => { // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"items\": \"200\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": 0,\n            \"date\": \"03/4/20\",\n            \"uid\": \"1675303448945\"\n        }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n        // this.setState({ users });\n    }\n}\n\nexport default AddOrder;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport moment from 'moment';\n\nclass Search extends React.Component {\n\n    searchStyle = {\n        fontSize: \"24px\",\n        align: \"right\",\n        textAlign: \"right\",\n        display: \"block\",\n        paddingTop: \"10px\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.update = this.update.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            searchString: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({searchString: e.target.value});\n    }\n\n    render() {\n        var libraries = this.props.users,\n            searchString = this.state.searchString.trim().toLowerCase();\n        if (searchString.length > 0) {\n            libraries = libraries.filter(function (i) {\n                return i.name.toLowerCase().match(searchString);\n            });\n        }\n        return (\n            <div>\n                <div className='row' style={{marginTop: \"20px\"}}>\n                    <div className='col-sm-3 col-md-3'><i style={this.searchStyle} className=\"fas fa-search\"> Search</i></div>\n                    <div className='col-sm-8 col-md-8'><input type=\"text\" className=\"form-control form-control-lg\"\n                                                     value={this.state.searchString} onChange={this.handleChange}\n                                                     placeholder=\"Type here...\"/></div>\n                </div>\n                <div className='row'>\n                    <div className='col-sm-12 col-md-12' ref={this.dflex}>\n                        {/*<div className=\"searchContainer col-xl-6 col-md-6\">*/}\n                        {/*</div>*/}\n                        <div className=\"d-flex flex-wrap justify-content-center\">\n                            {libraries.map(user =>\n                                <div\n                                    key={user.orderno}\n                                    className=\"card-deck pt-1 mb3\"\n                                    style={{margin: \"0.5rem auto\", width: \"336px\"}}\n                                    id={user.uid}\n                                >\n                                    <div className=\"card text-dark d-flex align-items-stretch\" style={{maxWidth: \"336px\"}}>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\"><span\n                                                className=\"text-danger\">Name: </span> {user.name}</h5>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order No: </span> {user.orderno}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order: </span> {user.order}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Items: </span>{user.items}, <span\n                                                className=\"\">Price: </span><i\n                                                className=\"fa fa-inr\"></i> {user.price}, </p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Total: </span><i\n                                                className=\"fa fa-inr\"></i> {user.items * user.price}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Email: </span>{user.email}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Mobole: </span>{user.phone}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Start Date: </span>{moment(user.startdate).format('DD/MM/YYYY')}\n                                            </p>\n                                            <button type=\"button\" className=\"btn btn-primary\"\n                                                    onClick={(event) => this.editData(user, event)}>Edit\n                                            </button>\n                                            <button type=\"button\" className=\"btn btn-danger ml-3\"\n                                                    onClick={(event) => this.removeData(user, event)}>Delete\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.update}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    update(order) {\n        if (typeof(order) === 'object' && typeof(this.props.update) === 'function') {\n            // console.log(\"update user search file\", user);\n            this.props.update(order);\n            $(\"#orderModal\").modal({show: false});\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    removeData(user, e) {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", user);\n            this.props.remove(user);\n        }\n    }\n\n    editData(user, e) {\n        e.preventDefault();\n        $(\"#orderModal\").modal({show: true});\n        this.setState({\n            user: user\n        });\n    }\n\n}\n\nexport default Search;\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    Urls = [\n        // {name: <i className='fas fa-arrow-circle-right'> Login</i>, path: \"/\", id: 1},\n        {name: <i className='fas fa-home'> Home</i>, path: \"/\", id: 2},\n        {name: <i className='fas fa-th-large'> Orders</i>, path: \"/orders\", id: 3},\n        {name: <i className='fas fa-search'> Search</i>, path: \"/search\", id: 4},\n        {name: <i className='fas fa-plus'> Add</i>, path: \"/add\", id: 5}\n        //, {name: <i className='fas fa-plus'> Create</i>, path: \"/create\", id: 6}\n    ]\n\n    constructor(props) {\n        super(props);\n\n        this.state = {activeId: 1};\n    }\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({activeId: id})\n    }\n\n    componentDidMount(links) {\n        // console.log(\"menu.js\", window.location.pathname);\n        // let location = window.location.pathname;\n        let url = window.location.href;\n        let last = url.replace(/\\/$/, \"\").split('/').splice(-1, 1)[0];\n        // console.log(\"last\", last);\n        this.Urls.map(link => {\n            // console.log(\"link.path\", link.path.split( '/' ).splice(-1, 1)[0]);\n            let linkpath = link.path.split( '/' ).splice(-1, 1)[0];\n            if (last === linkpath) {\n                this.setState({activeId: link.id});\n                // console.log(\"active id\", link.path, link.id);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Urls.map(url =>\n                            <Link\n                                key={url.id}\n                                to={url.path}\n                                className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                onClick={(event) => this.handleClick(event, url.id)}\n                            >\n                                {url.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from 'react';\nimport moment from \"moment\";\n\nclass Create extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submitHandle = this.submitHandle.bind(this);\n        this.createData = this.createData.bind(this);\n        this.state = {\n            createdOrders: [{\n                \"email\": \"\",\n                \"items\": \"\",\n                \"name\": \"\",\n                \"order\": \"\",\n                \"phone\": \"\",\n                \"price\": \"\",\n                \"total\": \"\",\n                \"date\": \"\",\n                \"uid\": \"\",\n                \"orderno\": \"\"\n            }]\n        }\n        this.fromNo = React.createRef();\n        this.toNo = React.createRef();\n\n    }\n\n    componentDidMount() {\n        // this.createObj();\n        /*setTimeout(() => {\n            this.setState((previousState) => ({\n                // orders: this.state.jsonOrders.slice(0,10)\n            }), () => {\n                // console.log(this.state.orders);\n            });\n        }, 300);*/\n    }\n\n    /*shouldComponentUpdate(nextProps, nextState) {\n        return this.state.pages.length != nextState.pages.length\n            // console.log(\"Props changed\");\n\n    }*/\n\n    createObj(fromNo, toNo) {\n        // console.log(\"!!fromNo && !!toNo\", !!fromNo && !!toNo);\n        if ((!!fromNo && !!toNo) || (fromNo === \"\" && toNo === \"\")) {\n            let fromNumber;\n            let toNumber;\n            // console.log(\"fromNo & toNo\", fromNo, toNo)\n            if (fromNo === \"\") {\n                fromNumber = 1;\n            } else {\n                fromNumber = fromNo;\n            }\n            if (toNo === \"\") {\n                toNumber = 31;\n            } else {\n                toNumber = toNo;\n            }\n            // console.log(\"fromNo & toNo\", fromNumber, toNumber);\n            let newArray = [];\n            var funcs = [];\n            let date = moment().format(\"MM/DD/YYYY\");\n            for (var i = fromNumber; i < toNumber; i++) {\n                funcs[i] = (function () {\n                    var index = i;\n                    let newObj =\n                        {\n                            \"email\": \"email@sample.com\",\n                            \"items\": \"\" + index,\n                            \"name\": \"Sample \" + index,\n                            \"order\": \"Sample Order \" + index,\n                            \"phone\": \"0123456789\",\n                            \"price\": \"\" + index * 5,\n                            \"total\": 0,\n                            // \"date\": \"03/4/20\",\n                            \"date\": date,\n                            \"uid\": index\n                        }\n                    return function () {\n                        newObj.orderno = index\n                        return newObj\n                    }\n                })();\n            }\n            var newOrders = [];\n            // console.log(\"fromNo & toNo\", fromNumber, toNumber);\n            for (let j = fromNumber; j < toNumber; j++) {\n                newOrders.push(funcs[j]());\n            }\n            // console.log(\"newOrders\", newOrders)\n            this.setState({\n                createdOrders: newOrders\n            }, () => {\n                // console.log(\"state createdOrders\", this.state.createdOrders);\n            })\n        }\n    }\n\n    submitHandle(e) {\n        e.preventDefault();\n        let fromNo = this.fromNo.current.value;\n        let toNo = this.toNo.current.value;\n        this.createObj(fromNo, toNo);\n        this.fromNo.current.value = '';\n        this.toNo.current.value = '';\n    }\n\n    createData(e) {\n        e.preventDefault();\n        // console.log(typeof(this.state.createdOrders));\n        if (typeof(this.state.createdOrders) === 'object') {\n            // console.log(\"updateParent OrderDList.js\", user);\n            this.props.createDada(this.state.createdOrders);\n            this.setState({\n                createdOrders: [{\n                    \"email\": \"\",\n                    \"items\": \"\",\n                    \"name\": \"\",\n                    \"order\": \"\",\n                    \"phone\": \"\",\n                    \"price\": \"\",\n                    \"total\": \"\",\n                    \"date\": \"\",\n                    \"uid\": \"\",\n                    \"orderno\": \"\"\n                }]\n            }, () => {\n                // console.log(\"state createdOrders\", this.state.createdOrders);\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <div style={this.loginFormStyle}>\n                            <form ref={this.formRef}>\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputEmail1\">From Number</label>\n                                    <input type=\"number\"\n                                           className=\"form-control\"\n                                           id=\"fromNo\"\n                                           ref={this.fromNo}\n                                           aria-describedby=\"numberHelp\"\n                                           placeholder=\"Enter from Number\"\n                                        // onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputPassword1\">To Number</label>\n                                    <input type=\"number\"\n                                           className=\"form-control\"\n                                           id=\"toNo\"\n                                           ref={this.toNo}\n                                           placeholder=\"Enter to Number\"\n                                    />\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-success\"\n                                    onClick={this.submitHandle}\n                                >\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12' style={{minHeight: \"25rem\"}}>\n                        <h4 className='my-3'>Orders</h4>\n                        <table className=\"table table-striped olistTable\">\n                            <tbody>\n                            <tr>\n                                <th width=\"7%\">Order</th>\n                                <th width=\"20%\">Order Name</th>\n                                <th width=\"20%\">Customer Name</th>\n                                <th>Items</th>\n                                <th>Cost</th>\n                                <th>Total</th>\n                                <th>Date</th>\n                            </tr>\n                            {\n                                this.state.createdOrders.map(order =>\n                                    <tr key={order.orderno} style={{}}>\n                                        <td className=\"\">{order.orderno}</td>\n                                        <td className=\"\">{order.order}</td>\n                                        <td className=\"\">{order.name}</td>\n                                        <td className=\"\">{order.items}</td>\n                                        <td className=\"\">{order.price}</td>\n                                        <td className=\"\">{order.items * order.price}</td>\n                                        <td className=\"\">{order.date}</td>\n                                    </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                        <button type=\"button\" className=\"btn btn-success\"\n                                onClick={this.createData}>Update Orders\n                        </button>\n                    </div>\n                    {/*{<div className='col-xl-12'>\n                        {JSON.stringify(this.state.users, null, 4)}\n                    </div>}*/}\n                </div>\n                {/*<div className='row'>\n                    <div className='col-xl-12 d-flex justify-content-center'>\n                        <Pagenation jsonOrders={this.state.jsonOrders} changePage={this.changePage}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp}/>\n                        <div>\n                        </div>\n                    </div>\n                </div>*/}\n            </div>\n        )\n    }\n\n}\n\nexport default Create;","import React from \"react\";\nimport {Redirect} from 'react-router';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport {useHistory, useLocation} from 'react-router-dom';\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport Login from './login';\nimport OrderDetails from './orderdetails';\nimport Orders from './orders';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Search from './search';\nimport Menu from './menu';\nimport Create from './create';\nimport NotFound from './notfound';\nimport {Typeahead, Fragment, Control} from 'react-typeahead';\nimport './style.css';\n\nclass App extends React.Component {\n        constructor(props) {\n            super(props);\n            Firebase.initializeApp(config);\n\n            this.state = {\n                users: []\n            }\n            this.addData = this.addData.bind(this);\n            this.updateData = this.updateData.bind(this);\n            this.removeData = this.removeData.bind(this);\n        }\n\n    /*componentDidMount() {\n      let location = window.location.pathname;\n      console.log(\"app.js-cdm\", location);\n  }\n\n    componentWillReceiveProps(nextProps) {\n      console.log(\"app-cwrp\", window.location.pathname);\n      if (nextProps.location !== this.props.location) {\n        // navigated!\n      }\n    }*/\n\n\n    render() {\n        // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n        // const base = process.env.PUBLIC_URL;\n        // console.log(\"location path\", \"/\");\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className=\"container-fluid pt-3\">\n                    <div className=\"row\">\n                        <div className='col-xl-12'>\n                            <h2>Viswa Orders</h2>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-xl-12\">\n                            {\n                                <Menu location={window.location.href}/>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row  my-2\">\n                        <div className=\"col-xl-12\">\n                            <Switch>\n                                <Route exact path=\"/\" render={props => <Login users={this.state.users} />} />\n                                <Route exact path=\"/home\" render={props => <Home orders={this.state.users} update={this.updateData} remove={this.removeData}/>} />\n                                <Route exact path=\"/orders\" render={props => <Orders orders={this.state.users} update={(user) => {this.updateData(user)}} remove={this.removeData} />} />\n                                <Route exact path=\"/search\" render={props => <Search users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                                <Route exact path=\"/create\" render={props => <Create orders={this.state.users} createDada={this.createData}/>}/>\n                                <Route render={(base) => <Redirect to={base}/>} />\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n\n    writeUserData = () => {\n        Firebase.database().ref('/').set(this.state);\n        // console.log('DATA SAVED', this.state);\n    }\n\n    getUserData = () => {\n        let ref = Firebase.database().ref('/');\n        ref.on('value', snapshot => {\n            const state = snapshot.val();\n            this.setState(state, function () {\n                // console.log('DATA RETRIEVED Users', this.state.users);\n            });\n        });\n        // console.log('DATA RETRIEVED');\n    }\n\n    componentDidMount() {\n        this.getUserData();\n    }\n\n    componentDidUpdate(prevState) {\n        // console.log(\"componentDidUpdate\", prevState, this.state);\n        // only write when it's different with the new state\n        if (prevState.users !== this.state.users) {\n            this.writeUserData();\n            // console.log(\"componentDidUpdate, writeUserData\");\n        }\n    }\n\n    addData = user => {\n        // console.log(\"This State Data\", this.state.users);\n        if (user) {\n            const {users} = this.state;\n            // console.log('users Data', users);\n            users.push(user)\n            this.setState({users});\n        }\n    }\n    createData = orders => {\n        // console.log(\"This State Data\", this.state.users);\n        if (orders) {\n            const {users} = this.state;\n            // console.log('Orders Data', orders);\n            // users.push(user)\n            this.setState({users: orders});\n        }\n    }\n\n    removeData = (user) => {\n        if (user) {\n            const {users} = this.state;\n            const newState = users.filter(data => {\n                return data.uid !== user.uid;\n            });\n            if (users !== newState) {\n                this.setState({users: newState});\n            }\n            // console.log(\"Updated Users state\");\n        }\n    }\n\n    updateData = (user) => {\n        // console.log(\"updateData.app.js, User: \", user);\n        if (!!user) {\n            // console.log(\"if user in app.js\");\n            let name = user.name;\n            let email = user.email;\n            let phone = user.phone;\n            let order = user.order;\n            let orderno = user.orderno;\n            let items = user.items;\n            let price = user.price;\n            let uid = user.uid;\n            let date = user.date;\n            const condition = (name && email && phone && order && orderno && items && price && date);\n            // console.log(\"!!uid\", !!uid, !!condition);\n            if (!!uid) {\n                // console.log(\"Update condition met\");\n                const {users} = this.state;\n                const devIndex = users.findIndex(user => {\n                    return user.uid === uid\n                });\n                // console.log(\"devIndex\", devIndex);\n                users[devIndex].name = name;\n                users[devIndex].email = email;\n                users[devIndex].phone = phone;\n                users[devIndex].order = order;\n                users[devIndex].orderno = orderno;\n                users[devIndex].items = items;\n                users[devIndex].price = price;\n                users[devIndex].date = date;\n                this.setState({users: users});\n                // console.log(\"Update Data\", users[devIndex])\n            }\n            // console.log(\"Updated State appjs\", this.state.users);\n        }\n    }\n}\n\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n// Prevent unused variable warnings\nwhile (false) {\n    console.log(App) && console.log(React) && console.log(ReactDOM)\n}\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}