{"version":3,"sources":["config.js","update.js","modalDialog.js","updateReadOnly.js","modalDialogReadOnly.js","home.js","useLocalStorage.js","login.js","orderdetails.js","pagenation.js","orderdetailslist.js","addorder.js","search.js","menu.js","create.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","InditialStateObj","user","uid","name","email","phone","order","orderno","items","price","total","startdate","startDate","selectedDay","handleDayChange","setState","state","moment","format","updateField","e","preventDefault","target","type","checked","value","updateChange","event","update","resetForm","baseState","bind","React","createRef","nextProps","this","className","ref","readOnly","placeholder","onChange","overlayComponent","CustomOverlay","onDayChange","onClick","data-toggle","data-target","data-show","Component","classNames","children","overlayWrapper","style","marginTop","marginLeft","overlay","ModalDialog","updateList","modalClose","$","modal","id","role","data-dismiss","remove","removeData","close","UpdateReadOnly","updateBtn","showUpdateBtn","readonly","fname","ModalDialogReadOnly","console","log","Home","displayData","updateApp","write","orders","map","key","href","show","useLocalStorage","defaultValue","stored","localStorage","getItem","initial","JSON","parse","useState","setValue","useEffect","setItem","stringify","Login","loginFormStyle","maxWidth","handleSubmitClick","emailValue","current","passwordValue","password","login","window","location","pathname","htmlFor","aria-describedby","Pagenation","handlePageChange","handlePrevious","next","endpage","showPageNo","nextState","previousState","noOfPages","setTimeout","Math","ceil","jsonOrders","length","pages","i","push","checkPreviousAndNext","checkPrevious","checkNext","pageNo","changePage","aria-label","page","index","handleNext","OrderDetailsList","createdOrders","createObj","slice","axios","get","then","res","data","sort","a","b","endingNo","lastPage","startingNo","funcs","newObj","newOrders","j","users","minHeight","width","editData","AddOrder","Date","handleChange","date","orderNumber","sortedUsers","highestOrder","parseInt","addUser","refs","condition","devIndex","findIndex","getTime","toString","action","add","String","max","selected","Search","searchStyle","fontSize","align","textAlign","display","paddingTop","searchString","libraries","trim","toLowerCase","filter","match","dflex","margin","lname","Menu","Urls","path","activeId","links","link","url","to","handleClick","Create","submitHandle","createData","fromNo","toNo","fromNumber","toNumber","createDada","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","newState","updateData","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2bb2da37.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\nimport moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"../node_modules/react-day-picker/lib/style.css\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Update extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.startdate = React.createRef();\n\n        this.state = this.InditialStateObj;\n\n        this.baseState = this.state;\n\n    }\n\n    InditialStateObj = {\n        user: {\n            uid: '',\n            name: '',\n            email: '',\n            phone: '',\n            order: '',\n            orderno: '',\n            items: 0,\n            price: 0,\n            total: 0,\n            startdate: \"\"\n        },\n        startDate: \"\",\n        selectedDay: \"\"\n    }\n\n\n    handleDayChange = selectedDay => {\n        this.setState({ \n            user: {\n                ...this.state.user,\n                startdate: moment(selectedDay).format()\n            }\n            // selectedDay: moment(selectedDay).format(),\n            // user: {startdate: moment(selectedDay).format()}\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(\"NP Updated\");\n        if (this.props.user !== nextProps.user) {\n            this.setState({\n                user: nextProps.user,\n                // selectedDay: nextProps.user.startdate\n            });\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            // console.log(\"update user\", this.state.user);\n            this.props.update(this.state.user);\n            /*if (window.confirm('Please click OK to close the window?')) {\n                console.log(\"dialog-close-update.js\");\n                this.props.close();\n            }*/\n        }\n        // this.resetForm();\n    }\n\n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n\n\n    render() {\n        return (\n            <div className='row'>\n                {/* <div className='col-xl-12'>\n                    {JSON.stringify(this.props.user, null, 2)}\n                </div> */}\n                <div className='col-xl-12'>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                {/*<input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />*/}\n                                <input type=\"number\" ref={this.orderno} value={this.state.user.orderno || ''} readOnly className=\"form-control\" placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.name} value={this.state.user.name || ''} onChange={(e) => this.updateField(\"name\", e)} className=\"form-control\" placeholder=\"Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date </label>\n                                    <DayPickerInput\n                                        overlayComponent={CustomOverlay}\n                                        className=\"form-control\"\n                                        name=\"birthday\"\n                                        placeholder=\"DD/MM/YYYY\"\n                                        format=\"DD/MM/YYYY\"\n                                        // value={moment(this.state.selectedDay).format('DD/MM/YYYY')}\n                                        value={moment(this.state.user.startdate).format('DD/MM/YYYY')}\n                                        onDayChange={this.handleDayChange}\n                                    />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"number\" ref={this.phone} value={(this.state.user.items * this.state.user.price) || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Total\" />\n                            </div>\n                            {/* <div className=\"form-group col-md-6\">\n                                <div>\n                                    <p>\n                                        this.state.selectedDay : {moment(this.state.selectedDay).format()}\n                                    </p>\n                                    <p>\n                                        this.state.user.startdate : {this.state.user.startdate}\n                                    </p>\n                                </div>\n                            </div> */}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                        {/*<button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-show=\"false\">Save</button>*/}\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\nfunction CustomOverlay({ classNames, selectedDay, children, ...props }) {\n    let overlayMargin = {\n        marginTop: -200,\n        marginLeft: 100,\n    }\n    return (\n        <div\n            className={classNames.overlayWrapper}\n            // style={{ marginTop: -200 }}\n            style={overlayMargin}\n            {...props}\n        >\n            <div className={classNames.overlay}>\n                {/* <h3>Hello day picker!</h3> */}\n                {/* <p>\n            <input />\n            <button onClick={() => console.log('clicked!')}>button</button>\n          </p> */}\n                {/* <p>\n            {selectedDay\n              ? `You picked: ${selectedDay.toLocaleDateString()}`\n              : 'Please pick a day'}\n          </p> */}\n                {children}\n            </div>\n        </div>\n    );\n}\n\nCustomOverlay.propTypes = {\n    classNames: PropTypes.object.isRequired,\n    selectedDay: PropTypes.instanceOf(Date),\n    children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport Update from './update';\nimport $ from 'jquery';\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      // console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  modalClose = () => {\n    // console.log(\"modal-dialog-js\");\n    $('#orderModal').modal('hide');\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"90%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Update Order</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <Update user={this.props.user}\n                          remove={this.removeData}\n                          update={this.updateList}\n                          close={this.modalClose}\n                  />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport moment from \"moment\";\n\nclass UpdateReadOnly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { readonly: true };\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            order: {\n                uid: '',\n                name: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            },\n            showUpdateBtn: false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.order !== nextProps.order) {\n            this.setState({ order: nextProps.order })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        /* if (typeof this.props.update === 'function') {\n            let user = {};\n            this.props.update(user);\n        } */\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn: !this.state.showUpdateBtn,\n            readonly: \"readonly\"\n        });\n    }\n\n    render() {\n        // console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Order Details</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.order.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.order.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.order.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.order.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.order.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.order.items * this.state.order.price || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.order.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.order.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.order.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date</label>\n                                <input type=\"text\" ref={this.startdate} value={this.state.order.startdate ? moment(this.state.order.startdate).format('DD/MM/YYYY') : null || ''} onChange={(e) => this.updateField(\"startdate\", e)} className=\"form-control\" placeholder=\"Date\" readOnly />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n        if (this.state.readonly) {\n            return (\n                <UpdateBtn />\n            );\n        }\n        return (\n            <UpdateBtn />\n        );\n    }\n}\nexport default UpdateReadOnly;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\n","import React from 'react';\nimport UpdateReadOnly from './updateReadOnly'\nclass ModalDialogReadOnly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <UpdateReadOnly order={this.props.order} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialogReadOnly;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport ModalDialogReadOnly from './modalDialogReadOnly';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayData = this.displayData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          {/* <div className='myst'>Orders</div> */}\n            <h4 className='my-3'>Orders</h4>\n            {this.props.orders.map(order =>\n            <div key={order.orderno} className=\"row rowblock rounded\">\n              <div className=\"col-sm-12 col-md-4 padding\"><strong className=\"title\">Order Name</strong>: <i className=\"fas fa-paperclip\"></i> <a href=\"#\" onClick={(event) => this.displayData(order, event)} className=\"\" role=\"button\">{order.order}.</a></div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Items</strong>: {order.items}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Cost</strong>: {order.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Total</strong>: {order.items * order.price}.</div>\n              <div className=\"col-sm-3 col-md-2 padding\"><strong className=\"title\">Call</strong>: <a href={\"tele:+91\"+order.phone} className=\"\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></div>\n            </div>\n            )}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialogReadOnly order={this.state.order} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  displayData(order, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      order: order\n    });\n  }\n  \n}\nexport default Home;\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n    const stored = localStorage.getItem(key);\n    const initial = stored ? JSON.parse(stored) : defaultValue;\n    const [value, setValue] = useState(initial);\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n};\n\nexport default useLocalStorage;","import React from \"react\";\nimport Home from \"./home\";\nimport useLocalStorage from './useLocalStorage';\n\nclass Login extends React.Component {\n    loginFormStyle = {\n        maxWidth: \"500px\"\n    }\n\n    constructor(props) {\n        super(props);\n        // this.handleChange = this.handleChange.bind(this);\n        this.handleSubmitClick = this.handleSubmitClick.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        };\n\n        this.email = React.createRef();\n        this.password = React.createRef();\n\n    }\n\n    /*handleChange = (e) => {\n        console.log(\"Target\", e.target);\n        let {id, value} = e.target;\n        console.log(\"before state\", this.email.current.value, value);\n        if(id === \"email\" || id === \"password\") {\n            this.setState({\n                ...this.state,\n                [id]: this.email.current.value\n            });\n            console.log(\"inside if\", this.state.email, this.state.password);\n        }\n            console.log(\"after state\", this.state.email, this.state.password);\n\n    }*/\n\n    handleSubmitClick = (e) => {\n        e.preventDefault();\n        let emailValue = this.email.current.value;\n        let passwordValue = this.password.current.value;\n\n        console.log(\"Values\", emailValue, passwordValue);\n        useLocalStorage(\"login\", {\n            email: \"ravi.chida@gmail.com\",\n            password: \"chida\"\n        })\n        let login = useLocalStorage(\"login\");\n        console.log(\"login\", login);\n        if (emailValue === \"ravi.chida@gmail.com\" && passwordValue === \"chida\") {\n            console.log(\"Login OK\");\n            // sendDetailsToServer()\n            window.location.pathname = \"/home\";\n        } else {\n            JSON.stringify(this.state);\n            console.log(\"Email or Password did not match\");\n        }\n        //window.location.pathname = \"/orders\";\n        // alert(\"not working\");\n    }\n\n    render() {\n        return (<div>\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <div style={this.loginFormStyle}>\n                        <form>\n                            <div className=\"form-group text-left\">\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                                <input type=\"email\"\n                                       className=\"form-control\"\n                                       id=\"email\"\n                                       ref={this.email}\n                                       aria-describedby=\"emailHelp\"\n                                       placeholder=\"Enter email\"\n                                       // onChange={this.handleChange}\n                                />\n                                {/*<small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with*/}\n                                {/*    anyone else.</small>*/}\n                            </div>\n                            <div className=\"form-group text-left\">\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                <input type=\"password\"\n                                       className=\"form-control\"\n                                       id=\"password\"\n                                       ref={this.password}\n                                       placeholder=\"Password\"\n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-success\"\n                                onClick={this.handleSubmitClick}\n                            >\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>)\n    }\n\n    /*\n    test@test.com\n    test\n    */\n}\n\nexport default Login;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n        this.state = {\n            user: {},\n            searchUsers: {}\n        }\n    }\n\n    removeData(user) {\n        if (typeof (this.props.remove) === 'function') {\n            this.props.remove(user);\n        }\n    }\n\n    render() \n    {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Search Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.orderno} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }} id={user.uid}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"text-danger\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={(event) => this.editData(user, event)}>Edit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    updateSearch(user){\n        console.log(\"updateSearch usr\", user);\n\n    }\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false });\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    editData(user, e) {\n        console.log(\"editdata fun\");\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;\n\n","import React from 'react';\nimport $ from 'jquery';\nimport {Link} from \"react-router-dom\";\n\nclass Pagenation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.handlePrevious = this.handlePrevious.bind(this);\n        this.next = React.createRef()\n        this.state = {\n            endpage: 1,\n            showPageNo: 1,\n            nextState: \"\",\n            previousState: \"\",\n            noOfPages: []\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            if(this.props.orders !== null){\n                let endpage = Math.ceil(this.props.jsonOrders.length / 10);\n                // console.log(\"endpage\", endpage);\n                let pages = [];\n                for(let i=0; i<endpage; i++) {\n                    pages.push(i);\n                }\n                // console.log(pages);\n                this.setState({\n                    endpage: endpage,\n                    noOfPages: pages\n                }, () => {\n                    // console.log(this.state.noOfPages);\n                    this.checkPreviousAndNext();\n                })\n            }\n        }, 300)\n    }\n\n    checkPreviousAndNext(){\n        this.checkPrevious();\n        this.checkNext();\n    }\n\n    handlePageChange(event, pageNo) {\n        event.preventDefault();\n        this.setState({\n            showPageNo: pageNo\n        }, () => {\n            this.checkPreviousAndNext();\n        })\n        this.props.changePage(pageNo);\n    }\n\n    handlePrevious(event) {\n        event.preventDefault();\n        this.setState({\n            showPageNo: this.state.showPageNo - 1\n        }, () => {\n            // console.log(this.state.showPageNo);\n            this.props.changePage(this.state.showPageNo);\n            this.checkPreviousAndNext();\n        })\n\n    }\n\n    handleNext(event) {\n        event.preventDefault();\n        if (this.state.showPageNo < this.state.endpage) {\n            this.setState({\n                showPageNo: this.state.showPageNo + 1\n            }, () => {\n                this.props.changePage(this.state.showPageNo);\n                this.checkPreviousAndNext();\n                // console.log(\"handleNext if state.showPageNo\", this.state.showPageNo);\n            })\n        }\n\n    }\n\n    checkPrevious() {\n        if (this.state.showPageNo === 1) {\n            this.setState({\n                previousState: \"disabled\"\n            }, () => {\n\n            })\n        } else if (this.state.showPageNo > 1) {\n            this.setState({\n                previousState: \"\"\n            }, () => {\n\n            })\n        }\n    }\n\n    checkNext() {\n        if (this.state.showPageNo === this.state.endpage) {\n            this.setState({\n                nextState: \"disabled\"\n            }, () => {\n                // console.log(\"endpage\", this.state.endpage);\n            })\n        }else if(this.state.showPageNo < this.state.endpage){\n            this.setState({\n                nextState: \"\"\n            }, () => {\n\n            })\n        }\n    }\n\n    render() {\n        return (\n            <nav aria-label=\"Page navigation\" style={{maxWidth: \"auto\"}}>\n                <ul className=\"pagination\">\n                    {\n                        <li className={`page-item ${this.state.previousState}`}>\n                            <a className=\"page-link\"\n                                // key={\"pga\" + index}\n                                // href=\"\"\n                                // to={url.path}\n                                // className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                               onClick={(event) => this.handlePrevious(event)}\n                            >\n                                Previous\n                            </a>\n                        </li>\n                    }\n                    {\n\n                        this.state.noOfPages.map((page, index) =>\n                            <li className=\"page-item\" key={page}>\n                                <a className=\"page-link\"\n                                   key={page}\n                                    // href=\"\"\n                                    // to={url.path}\n                                    // className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                   onClick={(event) => this.handlePageChange(event, page + 1)}\n                                >\n                                    {page + 1}\n                                </a>\n                            </li>\n                        )\n                    }\n                    {\n                        <li className={`page-item ${this.state.nextState}`} ref={this.next}>\n                            <a className=\"page-link\"\n                                // key={\"pga\" + index}\n                                // href=\"\"\n                                // to={url.path}\n                                // className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                               onClick={(event) => this.handleNext(event)}\n                            >\n                                Next\n                            </a>\n                        </li>\n                    }\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">Previous</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>*/}\n                    {/*<li className=\"page-item\"><a className=\"page-link\" href=\"#\">Next</a></li>*/}\n                </ul>\n            </nav>\n        )\n    }\n\n}\n\nexport default Pagenation;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog';\nimport Pagenation from './pagenation';\nimport axios from 'axios';\n\nclass OrderDetailsList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.changePage = this.changePage.bind(this);\n        this.state = {\n            user: {write: true},\n            pages: [],\n            orders: [],\n            createdOrders: [],\n            jsonOrders: []\n\n        }\n    }\n\n    componentDidMount() {\n        this.createObj();\n        setTimeout(() => {\n            this.setState((previousState) => ({\n                orders: this.state.jsonOrders.slice(0,10)\n            }), () => {\n                // console.log(this.state.orders);\n            });\n        }, 300);\n\n        // axios.get(`http://localhost:3000/viswa/orders.json`)\n        axios.get(`/viswa/orders.json`)\n            .then(res => {\n                let orders = res.data;\n                orders.sort(function(a, b){return a.orderno - b.orderno});\n                // console.log(\"sort\", orders);\n                this.setState(\n                    {\n                        jsonOrders: orders\n                    },\n                    () => {\n                        // window.orders = orders;\n                        // console.log(\"axios created Orders\", this.state.jsonOrders.length);\n                    });\n            })\n    }\n\n    /*shouldComponentUpdate(nextProps, nextState) {\n        return this.state.pages.length != nextState.pages.length\n            // console.log(\"Props changed\");\n\n    }*/\n\n    changePage(pageNo) {\n        let jsonOrders = [...this.state.jsonOrders];\n        let lastPage = Math.ceil(this.state.jsonOrders.length / 10);\n        let startingNo = pageNo === 1 ? 0 : (pageNo -1) * 10;\n        let endingNo;\n        // console.log(\"pageNo\", pageNo);\n        if(pageNo === 1){\n            endingNo = (pageNo * 10);\n        }else if(pageNo * 10 < this.state.jsonOrders.length){\n            endingNo = (pageNo * 10);\n        }else if(pageNo === lastPage){\n            endingNo = this.state.jsonOrders.length;\n        }\n\n        if((startingNo => 0) && !!endingNo)\n        {\n            // console.log(\"startingNo && endingNo\", startingNo, endingNo);\n            let orders = this.state.jsonOrders.slice(startingNo, endingNo);\n            this.setState({\n                orders: [...orders]\n            }, () => {\n                // console.log(\"page orders\", this.state.orders);\n            });\n        }\n    }\n\n    /*changePage(pageNo) {\n        // console.log(\"pageNo\",pageNo);\n        let orders = [];\n        let jsonOrders = [...this.state.jsonOrders];\n        // console.log(\"slice\", stateUsers.slice(pageNo-1));\n        orders = jsonOrders.slice(pageNo - 1);\n        this.setState({\n            orders: [...orders]\n        }, () => {\n            // console.log(\"state pages\", this.state.pages);\n        });\n    }*/\n\n    createObj() {\n        let newArray = [\"Arr 1\"];\n        var funcs = [];\n        for (var i = 1; i < 11; i++) {\n            funcs[i] = (function () {\n                var index = i;\n                let newObj = {\n                    \"email\": \"email@sample.com\",\n                    \"items\": \"\" + index,\n                    \"name\": \"Sample\",\n                    \"order\": \"Sample Order \" + index,\n                    \"phone\": \"0123456789\",\n                    \"price\": \"\" + index * 5,\n                    \"total\": 0,\n                    \"date\": \"03/4/20\",\n                    \"uid\": \"1675303448945\"\n                }\n                return function () {\n                    newObj.orderno = \"\" + index\n                    return newObj\n                }\n            })();\n        }\n        var newOrders = [];\n        for (var j = 1; j < 11; j++) {\n            newOrders.push(funcs[j]());\n        }\n        // console.log(\"newOrders\", newOrders)\n        this.setState({\n            users: newOrders\n        }, () => {\n            // console.log(\"state objects\", this.state.users);\n        })\n    }\n\n    updateApp(order) {\n        if (typeof (this.props.update) === 'function') {\n            // console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(order);\n            $(\"#orderModal\").modal({show: false});\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    removeData(order, e)\n    {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", order);\n            this.props.remove(order);\n        }\n    }\n\n    editData(order, e)\n    {\n        e.preventDefault();\n        $(\"#orderModal\").modal({show: true});\n        this.setState({\n            user: order\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12' style={{minHeight: \"25rem\"}}>\n                        <h4 className='my-3'>Orders</h4>\n                        <table className=\"table table-striped olistTable\">\n                            <tbody>\n                            <tr>\n                                <th width=\"7%\">Order</th>\n                                <th width=\"20%\">Order Name</th>\n                                <th width=\"20%\">Customer Name</th>\n                                <th>Items</th>\n                                <th>Cost</th>\n                                <th>Total</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                            {\n                                this.state.orders.map(order =>\n                                    <tr key={order.orderno} style={{}}>\n                                        <td className=\"\">{order.orderno}</td>\n                                        <td className=\"\">{order.order}</td>\n                                        <td className=\"\">{order.name}</td>\n                                        <td className=\"\">{order.items}</td>\n                                        <td className=\"\">{order.price}</td>\n                                        <td className=\"\">{order.items * order.price}</td>\n                                        <td className=\"\">\n                                            <button type=\"button\" className=\"btn btn-primary\"\n                                                    onClick={(event) => this.editData(order, event)}>Edit\n                                            </button>\n                                        </td>\n                                        <td className=\"\">\n                                            <button type=\"button\" className=\"btn btn-danger\"\n                                                    onClick={(event) => this.removeData(order, event)}>Delete\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                    {/*{<div className='col-xl-12'>\n                        {JSON.stringify(this.state.users, null, 4)}\n                    </div>}*/}\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12 d-flex justify-content-center'>\n                        <Pagenation jsonOrders={this.state.jsonOrders} changePage={this.changePage}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp}/>\n                        <div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default OrderDetailsList;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.orderNumber = this.orderNumber.bind(this);\n        this.state = {\n            users: [],\n          };\n    }\n\n    state = {\n        startDate: new Date()\n      };\n    \n      handleChange = date => {\n        this.setState({\n          startDate: date\n        });\n      };\n\n    render() {\n\n        var newOrderNumber = this.orderNumber(this.props.users);\n\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n                {/*\n                {JSON.stringify(this.props.users,null, 2)}\n                {sortedUsers}<br />\n                {highestOrder}<br />\n                {newOrderNumber}<br />\n                */}\n            </div>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"number\" ref='orderno' className=\"form-control\" value={String(this.orderNumber(this.props.users))} readOnly placeholder=\"Oder No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Order Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\"  max={999999999999} ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Date</label>\n                    <DatePicker className=\"form-control react-datepicker__input-container\" selected={this.state.startDate} ref='startdate' onChange={this.handleChange} />\n                </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            {/* <div><pre>{JSON.stringify(newOrderNumber, null, 2) }</pre></div> */}\n            </div>\n        </div>\n      )\n    }\n\n    orderNumber = function(users) {\n            let sortedUsers = [];\n            if(users.length !== 0){\n            for(let i=0; i<users.length; i++) {\n                sortedUsers[i] = users[i].orderno;\n            }\n                sortedUsers.sort(function(a, b){return a - b});\n                let highestOrder = sortedUsers[sortedUsers.length-1];\n                let orderNumber = parseInt(highestOrder)+1;\n                return orderNumber;\n            }\n            else {\n                return 3001\n            }\n    }\n  \n    addUser = (event) => {\n        console.log(\"Added form details\");\n        let orderno = parseInt(this.refs.orderno.value);\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let uid = this.refs.uid.value;\n        let startDate = this.state.startDate\n        const condition = (name && email && phone && order && orderno && items && price && startDate);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].orderno = orderno;\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].items = parseInt(items);\n          users[devIndex].price = parseInt(price);\n          // users[devIndex].total = parseInt(items) * parseInt(price);\n          users[devIndex].startdate = startDate;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"name\": name,\n                \"email\": email,\n                \"phone\": phone,\n                \"order\": order,\n                \"orderno\": parseInt(orderno),\n                \"items\": parseInt(items),\n                \"price\": parseInt(price),\n                \"uid\": parseInt(uid),\n                \"startdate\": startDate.toString()\n                }\n            this.props.action(user);\n            console.log(\"action user\", user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.startdate.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"items\": \"200\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": 0,\n            \"date\": \"03/4/20\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport moment from 'moment';\n\nclass Search extends React.Component {\n\n    searchStyle = {\n        fontSize: \"24px\",\n        align: \"right\",\n        textAlign: \"right\",\n        display: \"block\",\n        paddingTop: \"10px\"\n    }\n\n    state = {searchString: ''}\n\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        // this.dflex = React.createRef();\n    }\n\n    /*componentDidMount() {\n        const width = this.dflex.current.clientWidth;\n        let totalElements = Math.round(width / 336) || 0;\n        console.log(\"totalElements \", totalElements);\n        let totalMargin = width - (totalElements * 336) || 0;\n        console.log(\"totalMargin \", totalMargin);\n        let marginLeft = Math.abs(Math.round(totalMargin / (totalElements * 2))) || 0;\n        let marginRight = Math.abs(Math.round(totalMargin / (totalElements * 2))) || 0;\n        console.log(\"marginLeft \", marginLeft);\n        console.log(\"marginRight \", marginRight);\n        this.setState(\n            {\n                width: width,\n                marginLeft: marginLeft,\n                marginRight: marginRight\n            },\n            () => console.log(this.state.width)\n        );\n\n    }*/\n\n    handleChange = (e) => {\n        this.setState({searchString: e.target.value});\n    }\n\n    render() {\n        var libraries = this.props.users,\n            searchString = this.state.searchString.trim().toLowerCase();\n        if (searchString.length > 0) {\n            libraries = libraries.filter(function (i) {\n                return i.name.toLowerCase().match(searchString);\n            });\n        }\n        return (\n            <div>\n                <div className='row' style={{marginTop: \"20px\"}}>\n                    <div className='col-sm-3 col-md-3'><i style={this.searchStyle} className=\"fas fa-search\"> Search</i></div>\n                    <div className='col-sm-8 col-md-8'><input type=\"text\" className=\"form-control form-control-lg\"\n                                                     value={this.state.searchString} onChange={this.handleChange}\n                                                     placeholder=\"Type here...\"/></div>\n                </div>\n                <div className='row'>\n                    <div className='col-sm-12 col-md-12' ref={this.dflex}>\n                        {/*<div className=\"searchContainer col-xl-6 col-md-6\">*/}\n                        {/*</div>*/}\n                        <div className=\"d-flex flex-wrap justify-content-center\">\n                            {libraries.map(user =>\n                                <div\n                                    key={user.orderno}\n                                    className=\"card-deck pt-1 mb3\"\n                                    style={{margin: \"0.5rem auto\", width: \"336px\"}}\n                                    id={user.uid}\n                                >\n                                    <div className=\"card text-dark d-flex align-items-stretch\" style={{maxWidth: \"336px\"}}>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\"><span\n                                                className=\"text-danger\">Name: </span> {user.name}</h5>\n                                            <h5 className=\"card-title\"><span\n                                                className=\"\">First Name: </span> {user.fname}, <span\n                                                className=\"\">Last Name: </span> {user.lname}</h5>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order No: </span> {user.orderno}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Order: </span> {user.order}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Items: </span>{user.items}, <span\n                                                className=\"\">Price: </span><i\n                                                className=\"fa fa-inr\"></i> {user.price}, </p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Total: </span><i\n                                                className=\"fa fa-inr\"></i> {user.items * user.price}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Email: </span>{user.email}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Mobole: </span>{user.phone}</p>\n                                            <p className=\"card-text\"><span\n                                                className=\"\">Start Date: </span>{moment(user.startdate).format('DD/MM/YYYY')}\n                                            </p>\n                                            <button type=\"button\" className=\"btn btn-primary\"\n                                                    onClick={(event) => this.editData(user, event)}>Edit\n                                            </button>\n                                            <button type=\"button\" className=\"btn btn-danger ml-3\"\n                                                    onClick={(event) => this.removeData(user, event)}>Delete\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"update user search file\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({show: false});\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    removeData(user, e) {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", user);\n            this.props.remove(user);\n        }\n    }\n\n    editData(user, e) {\n        e.preventDefault();\n        $(\"#orderModal\").modal({show: true});\n        this.setState({\n            user: user\n        });\n    }\n\n}\n\nexport default Search;\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    Urls = [\n        {name: <i className='fas fa-arrow-circle-right'> Login</i>, path: \"/\", id: 1},\n        {name: <i className='fas fa-home'> Home</i>, path: \"home\", id: 2},\n        {name: <i className='fas fa-th-large'> Orders</i>, path: \"/orders\", id: 3},\n        {name: <i className='fas fa-search'> Search</i>, path: \"/search\", id: 4},\n        {name: <i className='fas fa-plus'> Add</i>, path: \"/add\", id: 5},\n        {name: <i className='fas fa-plus'> Create</i>, path: \"/create\", id: 6}\n    ]\n\n    constructor(props) {\n        super(props);\n\n        this.state = {activeId: 1};\n    }\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({activeId: id})\n    }\n\n    componentDidMount(links) {\n        // console.log(\"menu.js\", window.location.pathname);\n        let location = window.location.pathname;\n        this.Urls.map(link => {\n            if (location === link.path) {\n                this.setState({activeId: link.id});\n                // console.log(\"active id\", link.path, link.id);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Urls.map(url =>\n                            <Link\n                                key={url.id}\n                                to={url.path}\n                                className={this.state.activeId === url.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                onClick={(event) => this.handleClick(event, url.id)}\n                            >\n                                {url.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from 'react';\nimport $ from 'jquery';\n\nclass Create extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submitHandle = this.submitHandle.bind(this);\n        this.createData = this.createData.bind(this);\n        this.state = {\n            createdOrders: [{\n                \"email\": \"\",\n                \"items\": \"\",\n                \"name\": \"\",\n                \"order\": \"\",\n                \"phone\": \"\",\n                \"price\": \"\",\n                \"total\": \"\",\n                \"date\": \"\",\n                \"uid\": \"1\",\n                \"orderno\": \"\"\n            }]\n        }\n        this.fromNo = React.createRef();\n        this.toNo = React.createRef();\n    }\n\n    componentDidMount() {\n        // this.createObj();\n        /*setTimeout(() => {\n            this.setState((previousState) => ({\n                // orders: this.state.jsonOrders.slice(0,10)\n            }), () => {\n                // console.log(this.state.orders);\n            });\n        }, 300);*/\n    }\n\n    /*shouldComponentUpdate(nextProps, nextState) {\n        return this.state.pages.length != nextState.pages.length\n            // console.log(\"Props changed\");\n\n    }*/\n\n    createObj(fromNo, toNo) {\n        // console.log(\"!!fromNo && !!toNo\", !!fromNo && !!toNo);\n        if (fromNo === \"\" && toNo === \"\") {\n            let fromNumber;\n            let toNumber;\n            // console.log(\"fromNo & toNo\", fromNo, toNo)\n            if (fromNo === \"\") {\n                fromNumber = 1;\n            } else {\n                fromNumber = fromNo;\n            }\n            if (toNo === \"\") {\n                toNumber = 31;\n            } else {\n                toNumber = toNo;\n            }\n            // console.log(\"fromNo & toNo\", fromNumber, toNumber);\n            let newArray = [];\n            var funcs = [];\n            for (var i = fromNumber; i < toNumber; i++) {\n                funcs[i] = (function () {\n                    var index = i;\n                    let newObj =\n                        {\n                            \"email\": \"email@sample.com\",\n                            \"items\": \"\" + index,\n                            \"name\": \"Sample\",\n                            \"order\": \"Sample Order \" + index,\n                            \"phone\": \"0123456789\",\n                            \"price\": \"\" + index * 5,\n                            \"total\": 0,\n                            \"date\": \"03/4/20\",\n                            \"uid\": \"\" + 1\n                        }\n                    return function () {\n                        newObj.orderno = index\n                        return newObj\n                    }\n                })();\n            }\n            var newOrders = [];\n            // console.log(\"fromNo & toNo\", fromNumber, toNumber);\n            for (let j = fromNumber; j < toNumber; j++) {\n                newOrders.push(funcs[j]());\n            }\n            // console.log(\"newOrders\", newOrders)\n            this.setState({\n                createdOrders: newOrders\n            }, () => {\n                // console.log(\"state createdOrders\", this.state.createdOrders);\n            })\n        }\n    }\n\n    submitHandle(e) {\n        e.preventDefault();\n        let fromNo = this.fromNo.current.value;\n        let toNo = this.toNo.current.value;\n        this.createObj(fromNo, toNo);\n    }\n\n    createData(e) {\n        e.preventDefault();\n        // console.log(typeof(this.state.createdOrders));\n        if (typeof(this.state.createdOrders) === 'object') {\n            // console.log(\"updateParent OrderDList.js\", user);\n            this.props.createDada(this.state.createdOrders);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <div style={this.loginFormStyle}>\n                            <form>\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputEmail1\">From Number</label>\n                                    <input type=\"number\"\n                                           className=\"form-control\"\n                                           id=\"fromNumber\"\n                                           ref={this.fromNo}\n                                           aria-describedby=\"numberHelp\"\n                                           placeholder=\"Enter from Number\"\n                                        // onChange={this.handleChange}\n                                    />\n                                    {/*<small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with*/}\n                                    {/*    anyone else.</small>*/}\n                                </div>\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputPassword1\">To Number</label>\n                                    <input type=\"number\"\n                                           className=\"form-control\"\n                                           id=\"toNumber\"\n                                           ref={this.toNo}\n                                           placeholder=\"Enter to Number\"\n                                    />\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-success\"\n                                    onClick={this.submitHandle}\n                                >\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12' style={{minHeight: \"25rem\"}}>\n                        <h4 className='my-3'>Orders</h4>\n                        <table className=\"table table-striped olistTable\">\n                            <tbody>\n                            <tr>\n                                <th width=\"7%\">Order</th>\n                                <th width=\"20%\">Order Name</th>\n                                <th width=\"20%\">Customer Name</th>\n                                <th>Items</th>\n                                <th>Cost</th>\n                                <th>Total</th>\n                            </tr>\n                            {\n                                this.state.createdOrders.map(order =>\n                                    <tr key={order.orderno} style={{}}>\n                                        <td className=\"\">{order.orderno}</td>\n                                        <td className=\"\">{order.order}</td>\n                                        <td className=\"\">{order.name}</td>\n                                        <td className=\"\">{order.items}</td>\n                                        <td className=\"\">{order.price}</td>\n                                        <td className=\"\">{order.items * order.price}</td>\n                                    </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                        <button type=\"button\" className=\"btn btn-success\"\n                                onClick={this.createData}>Update Orders\n                        </button>\n                    </div>\n                    {/*{<div className='col-xl-12'>\n                        {JSON.stringify(this.state.users, null, 4)}\n                    </div>}*/}\n                </div>\n                {/*<div className='row'>\n                    <div className='col-xl-12 d-flex justify-content-center'>\n                        <Pagenation jsonOrders={this.state.jsonOrders} changePage={this.changePage}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp}/>\n                        <div>\n                        </div>\n                    </div>\n                </div>*/}\n            </div>\n        )\n    }\n\n}\n\nexport default Create;","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useHistory ,useLocation } from 'react-router-dom';\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport Login from './login';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Search from './search';\nimport Menu from './menu';\nimport Create from './create';\nimport NotFound from './notfound';\nimport {Typeahead, Fragment, Control } from 'react-typeahead';\nimport './style.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.removeData = this.removeData.bind(this);\n  }\n    /*componentDidMount() {\n      let location = window.location.pathname;\n      console.log(\"app.js-cdm\", location);\n  }\n\n    componentWillReceiveProps(nextProps) {\n      console.log(\"app-cwrp\", window.location.pathname);\n      if (nextProps.location !== this.props.location) {\n        // navigated!\n      }\n    }*/\n\n\n  render() {\n    // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n    // const base = process.env.PUBLIC_URL;\n    // console.log(\"location path\", \"/\");\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Orders</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              {\n                <Menu location={window.location.href} />\n              }\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" render={props => <Login users={this.state.users} />} />\n                <Route exact path=\"/home\" render={props => <Home orders={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                {/*<Route exact path=\"/\" render={props => <Home users={this.state.users} update={this.updateData} remove={this.removeData} />} />*/}\n                <Route exact path=\"/orders\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                {/* <Route exact path=\"/od\" render={props => <OrderDetails users={this.state.users} update={this.updateData} remove={this.removeData} />} /> */}\n                <Route exact path=\"/search\" render={props => <Search users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                <Route exact path=\"/create\" render={props => <Create orders={this.state.users} createDada={this.createData} />} />\n                <Route render={(base) => <Redirect to={base} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    // console.log('DATA SAVED', this.state);\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, function(){\n        // console.log('DATA RETRIEVED Users', this.state.users);\n      });\n    });\n    // console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log(\"componentDidUpdate\", prevState, this.state);\n    // only write when it's different with the new state\n    if (prevState.users !== this.state.users) {\n      this.writeUserData();\n      // console.log(\"componentDidUpdate, writeUserData\");\n    }\n  }\n\n  addData = user => {\n    // console.log(\"This State Data\", this.state.users);\n    if (user) {\n      const { users } = this.state;\n      // console.log('users Data', users);\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n  createData = orders => {\n    // console.log(\"This State Data\", this.state.users);\n    if (orders) {\n      const { users } = this.state;\n      // console.log('Orders Data', orders);\n      // users.push(user)\n      this.setState({ users : orders});\n    }\n  }\n\n  removeData = (user) => {\n    if(user){\n      const { users } = this.state;\n      const newState = users.filter(data => {\n        return data.uid !== user.uid;\n      });\n      if(users !== newState){\n        this.setState({ users: newState });\n      }\n      // console.log(\"Updated Users state\");\n    }\n  }\n\n  updateData = (user) => {\n    // console.log(\"updateData fun in app.js\", user);\n    if(user){\n      // console.log(\"if user in app.js\");\n      let name = user.name;\n      let email = user.email;\n      let phone = user.phone;\n      let order = user.order;\n      let orderno = user.orderno;\n      let items = user.items;\n      let price = user.price;\n      let uid = user.uid;\n      let startdate = user.startdate\n      const condition = ( name && email && phone && order && orderno && items && price && startdate);\n      if (uid && condition) {\n        // console.log(\"Update condition met\");\n        const { users } = this.state;\n        const devIndex = users.findIndex(user => {\n          return user.uid === uid\n        });\n        // console.log(\"devIndex\", devIndex);\n        users[devIndex].name = name;\n        users[devIndex].email = email;\n        users[devIndex].phone = phone;\n        users[devIndex].order = order;\n        users[devIndex].orderno = orderno;\n        users[devIndex].items = items;\n        users[devIndex].price = price;\n        users[devIndex].startdate = startdate;\n        this.setState({ users: users });\n      }\n    // console.log(\"Updated State appjs\", this.state.users);\n  }\n}\n}\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n// Prevent unused variable warnings\nwhile (false) {\n    console.log(App) && console.log(React) && console.log(ReactDOM)\n}\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}