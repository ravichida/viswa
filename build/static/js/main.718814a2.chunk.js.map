{"version":3,"sources":["config.js","update.js","modalDialog.js","orderdetails.js","orderdetailslist.js","addorder.js","home.js","menu.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","updateField","name","e","preventDefault","setState","user","state","target","type","checked","value","updateChange","event","update","fname","lname","console","log","bind","uid","React","createRef","email","phone","order","orderno","items","price","total","nextProps","this","className","ref","onChange","placeholder","onClick","data-toggle","data-target","data-show","Component","ModalDialog","updateList","id","role","style","data-dismiss","OrderDetails","editData","updateApp","removeData","users","map","key","margin","maxWidth","$","modal","show","remove","OrderDetailsList","width","AddOrder","startDate","Date","handleChange","date","addUser","refs","parseInt","toLocaleString","oDate","condition","devIndex","findIndex","data","getTime","toString","action","add","max","selected","Home","class","Menu","activeId","Links","path","link","to","handleClick","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","push","newState","filter","updateData","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.718814a2.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\n\nclass Update extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.fname = React.createRef();\n        this.lname = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                fname: '',\n                lname: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            }\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            let user = {};\n            user = { ...this.state.user, name: this.state.user.fname + \" \" + this.state.user.lname };\n            console.log(\"User details @ update.js\", user);\n            this.props.update(user);\n        }\n    }\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Update Order</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.total || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>First Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Last Name</label>\n                                <input type=\"text\" ref={this.lname} value={this.state.user.lname || ''} onChange={(e) => this.updateField(\"lname\", e)} className=\"form-control\" placeholder=\"Last Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;","import React from 'react';\nimport Update from './update'\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                <Update user={this.props.user} update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.state = {\n            user: {}\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Order Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.uid} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    {/* <p className=\"card-text\"><span className=\"text-white\">Order: </span> { \" \" + user.order + \" # \" + user.items + \" Nos\" }</p> */}\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\"\n                                                        onClick={(event) => this.removeData(user, event)}>Delete\n                                                    </button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\"\n                                                        onClick={(event) => this.editData(user, event)}>Edit\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp} />\n                        <div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false })\n        }\n    }\n\n    removeData(user, e) {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", user);\n            this.props.remove(user);\n        }\n    }\n\n    editData(user, e) {\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass OrderDetailsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details List</h4>\n            <table className=\"table table-striped\">\n              <tbody>\n                <tr>\n                  <th width=\"7%\">Order</th>\n                  <th width=\"20%\">Order Name</th>\n                  <th width=\"20%\">Customer Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Delete</th>\n                  <th>Edit</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.uid} style={{}}>\n                        <td className=\"\">{user.orderno}</td>\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.name}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.total}</td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button></td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-primary\" onClick={(event) => this.editData(user, event)}>Edit</button></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default OrderDetailsList;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n\nimport \"../node_modules/react-datepicker/dist/react-datepicker.css\"\n\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            users: [],\n          };\n    }\n\n    state = {\n        startDate: new Date()\n      };\n\n    handleChange = date => {\n        this.setState({\n          startDate: date\n        });\n      };\n    \n    render() {\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                {/* <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"text\" ref='orderno' className=\"form-control\" placeholder=\"Oder No\" />\n                </div> */}\n                <div className=\"form-group col-md-6\">\n                    <label>Order Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Total</label>\n                    <input type=\"text\" ref='total' className=\"form-control\" placeholder=\"Total Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\"  max={999999999999} ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <h6>Date</h6>\n                    <DatePicker selected={this.state.startDate} onChange={this.handleChange} ref=\"oDate\" />\n                    {/* <input type=\"number\" ref='phone' className=\"form-control\" placeholder=\"Date format 'MM/DD/YYYY'\" /> */}\n                </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            {/* <div><pre>{JSON.stringify(this.state, null, 2) }</pre></div> */}\n            </div>\n        </div>\n      )\n    }\n\n    addUser = (event) => {\n        console.log(\"Added form details\");\n        event.preventDefault();\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let total = ( parseInt(items) * parseInt(price)).toLocaleString('en-IN');\n        let uid = this.refs.uid.value;\n        let oDate = new Date(\"03/25/2015\");\n        const condition = (name && email && phone && order && items && price && total);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].items = items;\n          users[devIndex].price = price;\n          users[devIndex].total = total;\n          users[devIndex].oDate = oDate;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"email\": email,\n                \"name\": name,\n                \"items\": items,\n                \"name\": name,\n                \"order\": order,\n                \"phone\": phone,\n                \"price\": price,\n                \"total\": total,\n                \"uid\": uid,\n                \"oDate\": oDate\n                }\n            this.props.action(user);\n            console.log(user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.total.value = '';\n        this.refs.oDate.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"fname\": \"Ravi\",\n            \"items\": \"200\",\n            \"lname\": \"Test\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": \"10,000\",\n            \"oDate\": \"03/10/08\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Orders List</h4>\n            {this.props.users.map(user => \n            <div class=\"row\">\n              <div class=\"col-md\"><strong>Order Name</strong>: 1 Lorem Ipsum is simply dummy text of the printing and typesetting industry.</div>\n              <div class=\"col-md\"><strong>Items</strong>: 2 Lorem Ipsum is simply dummy text of the printing and typesetting industry.</div>\n              <div class=\"col-md\"><strong>Cost</strong>: 3 Lorem Ipsum is simply dummy text of the printing and typesetting industry.</div>\n              <div class=\"col-md\"><strong>Total</strong>: 4 Lorem Ipsum is simply dummy text of the printing and typesetting industry.</div>\n              <div class=\"col-md\"><strong>Call</strong>: 5 Lorem Ipsum is simply dummy text of the printing and typesetting industry.</div>\n            </div>\n            )}\n            {/* <table className=\"table table-striped\">\n              <tbody>\n                <tr>\n                  <th>Order Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Call</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.uid} style={{}}>{}\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.total}</td>\n                        <td className=\"\"><a href={\"tele:\"+user.phone} className=\"btn btn-info\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table> */}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default Home;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = { activeId: 1 };\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({ activeId: id })\n    }\n\n    Links = [\n        {name: \"Home\", path: \"/\", id: 1},\n        {name: \"Orders\", path: \"/olist\", id: 2},\n        {name: \"Details\", path: \"/od\", id: 3},\n        {name: \"Add\", path: \"/add\", id: 4}\n    ]\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Links.map(link =>\n                            <Link\n                                key={link.id}\n                                to={link.path}\n                                className={this.state.activeId === link.id ? \"nav-item nav-link active\" : \"nav-item nav-link\"}\n                                onClick={(event) => this.handleClick(event, link.id)}\n                            >\n                                {link.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Menu from './menu';\nimport NotFound from './notfound';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.removeData = this.removeData.bind(this);\n  }\n\n  render() {\n    // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n    const base = process.env.PUBLIC_URL;\n    // console.log(\"base Redirect\", base);\n    return (\n      <Router  basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Orders</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <Menu />\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" render={props => <Home users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/olist\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/od\" render={props => <OrderDetails users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                {/* <Route exact path=\"/login\" render={props => <Login users={this.state.users} />} /> */}\n                <Route render={(base) => <Redirect to={base} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    console.log('DATA SAVED');\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, function(){\n        console.log('DATA RETRIEVED Users', this.state.users);\n      });\n    });\n    console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevState) {\n    console.log(\"componentDidUpdate\", prevState, this.state);\n    // only write when it's different with the new state\n    if (prevState.users !== this.state.users) {\n      this.writeUserData();\n      console.log(\"componentDidUpdate, writeUserData\");\n    }\n  }\n\n  addData = user => {\n    // console.log(\"This State Data\", this.state.users);\n    if (user) {\n      const { users } = this.state;\n      console.log('users Data', users);\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n\n  removeData = (user) => {\n    if(user){\n      const { users } = this.state;\n      const newState = users.filter(data => {\n        return data.uid !== user.uid;\n      });\n      if(users !== newState){\n        this.setState({ users: newState });\n      }\n      console.log(\"Updated Users state\");\n    }\n  }\n\n  updateData = (user) => {\n    console.log(\"updateData fun in app.js\", user);\n    if(user){\n      console.log(\"if user in app.js\");\n      let fname = user.fname;\n      let lname = user.lname;\n      let email = user.email;\n      let phone = user.phone;\n      let order = user.order;\n      let orderno = user.orderno;\n      let items = user.items;\n      let price = user.price;\n      let name = user.name;\n      let total = user.total;\n      let uid = user.uid;\n      const condition = (fname && lname && name && email && phone && order && orderno && items && price && total);\n      if (uid && condition) {\n        console.log(\"Update condition met\");\n        const { users } = this.state;\n        const devIndex = users.findIndex(user => {\n          return user.uid === uid\n        });\n        console.log(\"devIndex\", devIndex);\n        users[devIndex].fname = fname;\n        users[devIndex].lname = lname;\n        users[devIndex].name = name;\n        users[devIndex].email = email;\n        users[devIndex].phone = phone;\n        users[devIndex].order = order;\n        users[devIndex].orderno = orderno;\n        users[devIndex].items = items;\n        users[devIndex].price = price;\n        users[devIndex].total = total;\n        this.setState({ users: users });\n      }\n    console.log(\"Updateed State appjs\", this.state.users);\n  }\n}\n}\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}