{"version":3,"sources":["config.js","update.js","modalDialog.js","orderdetails.js","orderdetailslist.js","addorder.js","updateReadOnly.js","modalDialogReadOnly.js","home.js","menu.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","updateField","name","e","preventDefault","setState","user","state","target","type","checked","value","updateChange","event","update","fname","lname","console","log","updateBtn","showUpdateBtn","readonly","bind","uid","React","createRef","email","phone","order","orderno","items","price","total","nextProps","this","className","ref","onChange","placeholder","onClick","data-toggle","data-target","data-show","Component","ModalDialog","updateList","id","role","style","data-dismiss","OrderDetails","editData","updateApp","removeData","users","map","key","margin","maxWidth","$","modal","show","remove","OrderDetailsList","write","width","AddOrder","startDate","Date","handleChange","date","addUser","refs","parseInt","toLocaleString","oDate","condition","devIndex","findIndex","data","getTime","toString","action","add","max","selected","UpdateReadOnly","readOnly","ModalDialogReadOnly","Home","displayData","href","Menu","activeId","Links","path","link","to","handleClick","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","push","newState","filter","updateData","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2322af6e.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\n\nclass Update extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {readonly: true};\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.fname = React.createRef();\n        this.lname = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                fname: '',\n                lname: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            }\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            let user = {};\n            user = { ...this.state.user, name: this.state.user.fname + \" \" + this.state.user.lname };\n            console.log(\"User details @ update.js\", user);\n            this.props.update(user);\n        }\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn : !this.state.showUpdateBtn,\n            readonly : \"readonly\"\n            });\n    }\n\n    render() {\n        console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Update Order</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.total || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>First Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Last Name</label>\n                                <input type=\"text\" ref={this.lname} value={this.state.user.lname || ''} onChange={(e) => this.updateField(\"lname\", e)} className=\"form-control\" placeholder=\"Last Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n  }","import React from 'react';\nimport Update from './update'\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <Update user={this.props.user} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.state = {\n            user: {}\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Order Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.uid} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    {/* <p className=\"card-text\"><span className=\"text-white\">Order: </span> { \" \" + user.order + \" # \" + user.items + \" Nos\" }</p> */}\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\"\n                                                        onClick={(event) => this.removeData(user, event)}>Delete\n                                                    </button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\"\n                                                        onClick={(event) => this.editData(user, event)}>Edit\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <ModalDialog user={this.state.user} update={this.updateApp} />\n                        <div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false })\n        }\n    }\n\n    removeData(user, e) {\n        e.preventDefault();\n        if (typeof (this.props.remove) === 'function') {\n            console.log(\"Remove Data @ odlist.js\", user);\n            this.props.remove(user);\n        }\n    }\n\n    editData(user, e) {\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass OrderDetailsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details List</h4>\n            <table className=\"table table-striped\">\n              <tbody>\n                <tr>\n                  <th width=\"7%\">Order</th>\n                  <th width=\"20%\">Order Name</th>\n                  <th width=\"20%\">Customer Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Delete</th>\n                  <th>Edit</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.uid} style={{}}>\n                        <td className=\"\">{user.orderno}</td>\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.name}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.total}</td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button></td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-primary\" onClick={(event) => this.editData(user, event)}>Edit</button></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default OrderDetailsList;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n\nimport \"../node_modules/react-datepicker/dist/react-datepicker.css\"\n\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            users: [],\n          };\n    }\n\n    state = {\n        startDate: new Date()\n      };\n\n    handleChange = date => {\n        this.setState({\n          startDate: date\n        });\n      };\n    \n    render() {\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                {/* <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"text\" ref='orderno' className=\"form-control\" placeholder=\"Oder No\" />\n                </div> */}\n                <div className=\"form-group col-md-6\">\n                    <label>Order Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Total</label>\n                    <input type=\"text\" ref='total' className=\"form-control\" placeholder=\"Total Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\"  max={999999999999} ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <h6>Date</h6>\n                    <DatePicker selected={this.state.startDate} onChange={this.handleChange} ref=\"oDate\" />\n                    {/* <input type=\"number\" ref='phone' className=\"form-control\" placeholder=\"Date format 'MM/DD/YYYY'\" /> */}\n                </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            {/* <div><pre>{JSON.stringify(this.state, null, 2) }</pre></div> */}\n            </div>\n        </div>\n      )\n    }\n\n    addUser = (event) => {\n        console.log(\"Added form details\");\n        event.preventDefault();\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let total = ( parseInt(items) * parseInt(price)).toLocaleString('en-IN');\n        let uid = this.refs.uid.value;\n        let oDate = this.state.startDate;\n        const condition = (name && email && phone && order && items && price && total);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].items = items;\n          users[devIndex].price = price;\n          users[devIndex].total = total;\n          users[devIndex].oDate = oDate;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"email\": email,\n                \"name\": name,\n                \"items\": items,\n                \"name\": name,\n                \"order\": order,\n                \"phone\": phone,\n                \"price\": price,\n                \"total\": total,\n                \"uid\": uid,\n                \"oDate\": oDate\n                }\n            this.props.action(user);\n            console.log(user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.total.value = '';\n        this.refs.oDate.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"fname\": \"Ravi\",\n            \"items\": \"200\",\n            \"lname\": \"Test\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": \"10,000\",\n            \"oDate\": \"03/10/08\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;","import React from 'react';\n\nclass UpdateReadOnly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {readonly: true};\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.fname = React.createRef();\n        this.lname = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                fname: '',\n                lname: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            },\n            showUpdateBtn:false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            let user = {};\n            user = { ...this.state.user, name: this.state.user.fname + \" \" + this.state.user.lname };\n            console.log(\"User details @ update.js\", user);\n            this.props.update(user);\n        }\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn : !this.state.showUpdateBtn,\n            readonly : \"readonly\"\n            });\n    }\n\n    render() {\n        console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Update Order</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.total || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>First Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Last Name</label>\n                                <input type=\"text\" ref={this.lname} value={this.state.user.lname || ''} onChange={(e) => this.updateField(\"lname\", e)} className=\"form-control\" placeholder=\"Last Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" readOnly />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n        if (this.state.readonly) {\n            return (\n                <UpdateBtn  />\n            );\n          }\n          return (\n                <UpdateBtn />\n          );\n    }\n}\nexport default UpdateReadOnly;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n  }","import React from 'react';\nimport UpdateReadOnly from './updateReadOnly'\nclass ModalDialogReadOnly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <UpdateReadOnly user={this.props.user} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialogReadOnly;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport ModalDialogReadOnly from './modalDialogReadOnly';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayData = this.displayData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Orders List</h4>\n            {this.props.users.map(user => \n            <div className=\"row bg-success\">\n              <div className=\"mt-2 col-md-4\"><strong>Order Name</strong>: <a href=\"#\" onClick={(event) => this.displayData(user, event)} className=\"btn btn-info\" role=\"button\">{user.order}.</a></div>\n              <div className=\"mt-2 col-md-2\"><strong>Items</strong>: {user.items}.</div>\n              <div className=\"mt-2 col-md-2\"><strong>Cost</strong>: {user.price}.</div>\n              <div className=\"mt-2 col-md-2\"><strong>Total</strong>: {user.total}.</div>\n              <div className=\"mt-2 mb-4 col-md-2\"><strong>Call</strong>: <a href={\"tele:\"+user.phone} className=\"btn btn-info\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></div>\n            </div>\n            )}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialogReadOnly user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  displayData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default Home;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = { activeId: 1 };\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({ activeId: id })\n    }\n\n    Links = [\n        {name: \"Home\", path: \"/\", id: 1},\n        {name: \"Orders\", path: \"/olist\", id: 2},\n        {name: \"Details\", path: \"/od\", id: 3},\n        {name: \"Add\", path: \"/add\", id: 4}\n    ]\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Links.map(link =>\n                            <Link\n                                key={link.id}\n                                to={link.path}\n                                className={this.state.activeId === link.id ? \"nav-link nav-item btn-success  active\" : \"nav-link nav-item btn-success navmr\"}\n                                onClick={(event) => this.handleClick(event, link.id)}\n                            >\n                                {link.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Menu from './menu';\nimport NotFound from './notfound';\nimport {Typeahead, Fragment, Control } from 'react-typeahead';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.removeData = this.removeData.bind(this);\n  }\n\n  render() {\n    // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n    const base = process.env.PUBLIC_URL;\n    // console.log(\"base Redirect\", base);\n    return (\n      <Router  basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Orders</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <Menu />\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" render={props => <Home users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/olist\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/od\" render={props => <OrderDetails users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                <Route render={(base) => <Redirect to={base} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    console.log('DATA SAVED');\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, function(){\n        console.log('DATA RETRIEVED Users', this.state.users);\n      });\n    });\n    console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevState) {\n    console.log(\"componentDidUpdate\", prevState, this.state);\n    // only write when it's different with the new state\n    if (prevState.users !== this.state.users) {\n      this.writeUserData();\n      console.log(\"componentDidUpdate, writeUserData\");\n    }\n  }\n\n  addData = user => {\n    // console.log(\"This State Data\", this.state.users);\n    if (user) {\n      const { users } = this.state;\n      console.log('users Data', users);\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n\n  removeData = (user) => {\n    if(user){\n      const { users } = this.state;\n      const newState = users.filter(data => {\n        return data.uid !== user.uid;\n      });\n      if(users !== newState){\n        this.setState({ users: newState });\n      }\n      console.log(\"Updated Users state\");\n    }\n  }\n\n  updateData = (user) => {\n    console.log(\"updateData fun in app.js\", user);\n    if(user){\n      console.log(\"if user in app.js\");\n      let fname = user.fname;\n      let lname = user.lname;\n      let email = user.email;\n      let phone = user.phone;\n      let order = user.order;\n      let orderno = user.orderno;\n      let items = user.items;\n      let price = user.price;\n      let name = user.name;\n      let total = user.total;\n      let uid = user.uid;\n      const condition = (fname && lname && name && email && phone && order && orderno && items && price && total);\n      if (uid && condition) {\n        console.log(\"Update condition met\");\n        const { users } = this.state;\n        const devIndex = users.findIndex(user => {\n          return user.uid === uid\n        });\n        console.log(\"devIndex\", devIndex);\n        users[devIndex].fname = fname;\n        users[devIndex].lname = lname;\n        users[devIndex].name = name;\n        users[devIndex].email = email;\n        users[devIndex].phone = phone;\n        users[devIndex].order = order;\n        users[devIndex].orderno = orderno;\n        users[devIndex].items = items;\n        users[devIndex].price = price;\n        users[devIndex].total = total;\n        this.setState({ users: users });\n      }\n    console.log(\"Updateed State appjs\", this.state.users);\n  }\n}\n}\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}