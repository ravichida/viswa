{"version":3,"sources":["config.js","update.js","modalDialog.js","orderdetails.js","orderdetailslist.js","addorder.js","updateReadOnly.js","modalDialogReadOnly.js","home.js","search.js","menu.js","App.js","notfound.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","Update","props","InditialStateObj","user","uid","name","email","phone","order","orderno","items","price","total","startdate","startDate","selectedDay","handleDayChange","setState","state","moment","format","updateField","e","preventDefault","target","type","checked","value","updateChange","event","update","console","log","resetForm","baseState","bind","React","createRef","nextProps","this","className","ref","onChange","placeholder","overlayComponent","CustomOverlay","onDayChange","onClick","data-toggle","data-target","data-show","Component","classNames","children","overlayWrapper","style","marginTop","marginLeft","overlay","ModalDialog","updateList","id","role","data-dismiss","remove","removeData","OrderDetails","editData","updateApp","updateSearch","searchUsers","users","map","key","margin","maxWidth","fname","lname","$","modal","show","OrderDetailsList","write","width","AddOrder","addUser","refs","condition","devIndex","findIndex","data","parseInt","Date","getTime","toString","action","add","max","JSON","stringify","UpdateReadOnly","updateBtn","showUpdateBtn","readonly","readOnly","ModalDialogReadOnly","Home","displayData","href","Search","searchStyle","fontSize","align","textAlign","display","paddingTop","searchString","handleChange","libraries","trim","toLowerCase","length","filter","i","match","Menu","activeId","Links","path","link","to","handleClick","App","writeUserData","Firebase","database","set","getUserData","on","snapshot","val","addData","push","newState","updateData","initializeApp","basename","process","exact","render","base","prevState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0b73e100.chunk.js","sourcesContent":["\nconst config = {\n    apiKey: \"AIzaSyD-oPhFanNSFyEuhewxCDSu8WrqzAgIn6E\",\n    authDomain: \"ajax-3f330.firebaseapp.com\",\n    databaseURL: \"https://ajax-3f330.firebaseio.com\"\n  }\n  \n  export default config;","import React from 'react';\nimport moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"../node_modules/react-day-picker/lib/style.css\";\n\nclass Update extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.startdate = React.createRef();\n\n        this.state = this.InditialStateObj;\n\n        this.baseState = this.state;\n\n    }\n\n    InditialStateObj = {\n        user: {\n            uid: '',\n            name: '',\n            email: '',\n            phone: '',\n            order: '',\n            orderno: '',\n            items: 0,\n            price: 0,\n            total: 0,\n            startdate: \"\"\n        },\n        startDate: \"\",\n        selectedDay: \"\"\n    }\n\n\n    handleDayChange = selectedDay => {\n        this.setState({ \n            user: {\n                ...this.state.user,\n                startdate: moment(selectedDay).format()\n            }\n            // selectedDay: moment(selectedDay).format(),\n            // user: {startdate: moment(selectedDay).format()}\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"NP Updated\");\n        if (this.props.user !== nextProps.user) {\n            this.setState({\n                user: nextProps.user,\n                // selectedDay: nextProps.user.startdate\n            });\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        if (typeof this.props.update === 'function') {\n            /* \n            User Full name\n            let user = {};\n            user = { ...this.state.user, name: this.state.user.fname + \" \" + this.state.user.lname }; */\n            console.log(\"updat user\", this.state.user);\n            this.props.update(this.state.user);\n\n        }\n        // this.resetForm();\n    }\n\n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n\n\n    render() {\n        return (\n            <div className='row'>\n\n                {/* <div className='col-xl-12'>\n                    {JSON.stringify(this.props.user, null, 2)}\n                </div> */}\n                <div className='col-xl-12'>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.name} value={this.state.user.name || ''} onChange={(e) => this.updateField(\"name\", e)} className=\"form-control\" placeholder=\"Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Date </label>\n                                <div>\n                                    <DayPickerInput\n                                        overlayComponent={CustomOverlay}\n                                        name=\"birthday\"\n                                        placeholder=\"DD/MM/YYYY\"\n                                        format=\"DD/MM/YYYY\"\n                                        // value={moment(this.state.selectedDay).format('DD/MM/YYYY')}\n                                        value={moment(this.state.user.startdate).format('DD/MM/YYYY')}\n                                        onDayChange={this.handleDayChange}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"number\" ref={this.phone} value={(this.state.user.items * this.state.user.price) || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Total\" />\n                            </div>\n                            {/* <div className=\"form-group col-md-6\">\n                                <div>\n                                    <p>\n                                        this.state.selectedDay : {moment(this.state.selectedDay).format()}\n                                    </p>\n                                    <p>\n                                        this.state.user.startdate : {this.state.user.startdate}\n                                    </p>\n                                </div>\n                            </div> */}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.updateChange} data-toggle=\"modal\" data-target=\"#orderModal\" data-show=\"false\">Save</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Update;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n}\n\nfunction CustomOverlay({ classNames, selectedDay, children, ...props }) {\n    let overlayMargin = {\n        marginTop: -200,\n        marginLeft: 100,\n    }\n    return (\n        <div\n            className={classNames.overlayWrapper}\n            // style={{ marginTop: -200 }}\n            style={overlayMargin}\n            {...props}\n        >\n            <div className={classNames.overlay}>\n                {/* <h3>Hello day picker!</h3> */}\n                {/* <p>\n            <input />\n            <button onClick={() => console.log('clicked!')}>button</button>\n          </p> */}\n                {/* <p>\n            {selectedDay\n              ? `You picked: ${selectedDay.toLocaleDateString()}`\n              : 'Please pick a day'}\n          </p> */}\n                {children}\n            </div>\n        </div>\n    );\n}\n\nCustomOverlay.propTypes = {\n    classNames: PropTypes.object.isRequired,\n    selectedDay: PropTypes.instanceOf(Date),\n    children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport Update from './update'\nclass ModalDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"90%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Update Order</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <Update user={this.props.user} remove={this.removeData} update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialog;","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\n\nclass OrderDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editData = this.editData.bind(this);\n        this.updateApp = this.updateApp.bind(this);\n        this.removeData = this.removeData.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n        this.state = {\n            user: {},\n            searchUsers: {}\n        }\n    }\n\n    removeData(user) {\n        if (typeof (this.props.remove) === 'function') {\n            this.props.remove(user);\n        }\n    }\n\n    render() \n    {\n        return (\n            <div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h4 className='my-3'>Search Details</h4>\n                        {\n                            this.props.users\n                                .map(user =>\n                                    <div key={user.orderno} className=\"d-inline-flex flex-row\"\n                                        style={{ margin: '0.5rem', maxWidth: \"450px\" }} id={user.uid}>\n                                        <div className=\"card-deck pt-1 mb3\">\n                                            <div className=\"card text-dark d-flex align-items-stretch\">\n                                                <div className=\"card-body text-primary\">\n                                                    <h5 className=\"card-title\"><span\n                                                        className=\"text-danger\">Name: </span> {user.name}</h5>\n                                                    <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                                                        className=\"\">Last Name: </span> {user.lname}</h5>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order No: </span> {user.orderno}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Order: </span> {user.order}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Items: </span>{user.items}, <span\n                                                            className=\"\">Price: </span><i\n                                                                className=\"fa fa-inr\"></i> {user.price}, <span\n                                                                    className=\"\">Total: </span><i\n                                                                        className=\"fa fa-inr\"></i> {user.total}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Email: </span>{user.email}</p>\n                                                    <p className=\"card-text\"><span\n                                                        className=\"\">Mobole: </span>{user.phone}</p>\n                                                    <button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button>\n                                                    <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={(event) => this.editData(user, event)}>Edit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    updateSearch(user){\n        console.log(\"updateSearch usr\", user);\n\n    }\n    updateApp(user) {\n        if (typeof (this.props.update) === 'function') {\n            console.log(\"updateParent OrderDList.js\", user);\n            this.props.update(user);\n            $(\"#orderModal\").modal({ show: false });\n            $(\".modal-backdrop\").remove();\n        }\n    }\n\n    editData(user, e) {\n        console.log(\"editdata fun\");\n        e.preventDefault();\n        $(\"#orderModal\").modal({ show: true });\n        this.setState({\n            user: user\n        });\n    }\n}\n\nexport default OrderDetails;\n\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nclass OrderDetailsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h4 className='my-3'>Order Details List</h4>\n            <table className=\"table table-striped olistTable\">\n              <tbody>\n                <tr>\n                  <th width=\"7%\">Order</th>\n                  <th width=\"20%\">Order Name</th>\n                  <th width=\"20%\">Customer Name</th>\n                  <th>Items</th>\n                  <th>Cost</th>\n                  <th>Total</th>\n                  <th>Delete</th>\n                  <th>Edit</th>\n                </tr>\n                {\n                  this.props.users\n                    .map(user =>\n                      <tr key={user.orderno} style={{}}>\n                        <td className=\"\">{user.orderno}</td>\n                        <td className=\"\">{user.order}</td>\n                        <td className=\"\">{user.name}</td>\n                        <td className=\"\">{user.items}</td>\n                        <td className=\"\">{user.price}</td>\n                        <td className=\"\">{user.items * user.price}</td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button></td>\n                        <td className=\"\"><button type=\"button\" className=\"btn btn-primary\" onClick={(event) => this.editData(user, event)}>Edit</button></td>\n                      </tr>\n                    )\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false });\n      $(\".modal-backdrop\").remove();\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default OrderDetailsList;\n","import React from 'react';\n/* import DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\"; */\n\nclass AddOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            users: [],\n          };\n    }\n\n    /* state = {\n        startDate: new Date()\n      };\n    \n      handleChange = date => {\n        this.setState({\n          startDate: date\n        });\n      }; */\n\n    render() {\n      return (\n        <div className='row'>\n            <div className='col-xl-12'>\n            <h4 className='my-3'>Add Order</h4>\n            <form>\n                <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                <div className=\"form-group col-md-6\">\n                    <label>Oder No</label>\n                    <input type=\"text\" ref='orderno' className=\"form-control\" placeholder=\"Oder No\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Order Name</label>\n                    <input type=\"text\" ref='order' className=\"form-control\" placeholder=\"Oder Name\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Number of Items</label>\n                    <input type=\"number\" ref='items' className=\"form-control\" placeholder=\"Number of Items\" />\n                    <div className=\"danger\"></div>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Item Price</label>\n                    <input type=\"number\" ref='price' className=\"form-control\" placeholder=\"Item Cost\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Email</label>\n                    <input type=\"text\" ref='email' className=\"form-control\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Mobile / Phone No</label>\n                    <input type=\"number\"  max={999999999999} ref='phone' className=\"form-control\" placeholder=\"Mobile / Phone No\" />\n                </div>\n                {/* <div className=\"form-group col-md-6\">\n                    <label>Date</label>\n                    <DatePicker selected={this.state.startDate} ref='startdate' onChange={this.handleChange} />\n                </div> */}\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ this.addUser }>Save</button>\n            </form>\n            <div><pre>{JSON.stringify(this.state, null, 2) }</pre></div>\n            </div>\n        </div>\n      )\n    }\n\n    addUser = (event) => {\n        console.log(\"Added form details\");\n        let orderno = this.refs.orderno.value;\n        let name = this.refs.name.value;\n        let email = this.refs.email.value;\n        let phone = this.refs.phone.value;\n        let order = this.refs.order.value;\n        let items = this.refs.items.value;\n        let price = this.refs.price.value;\n        let uid = this.refs.uid.value;\n        let startDate = this.state.startDate\n        const condition = (name && email && phone && order && orderno && items && price && startDate);\n        if (uid && condition){\n          const { users } = this.state;\n          const devIndex = users.findIndex(data => {\n            return data.uid === uid \n          });\n          users[devIndex].orderno = orderno;\n          users[devIndex].name = name;\n          users[devIndex].email = email;\n          users[devIndex].phone = phone;\n          users[devIndex].order = order;\n          users[devIndex].items = parseInt(items);\n          users[devIndex].price = parseInt(price);\n          // users[devIndex].total = parseInt(items) * parseInt(price);\n          users[devIndex].startdate = startDate;\n          this.setState({ users });\n        }\n        else if (condition) {\n            const uid = new Date().getTime().toString();\n            const user = {\n                \"name\": name,\n                \"email\": email,\n                \"phone\": phone,\n                \"order\": order,\n                \"orderno\": parseInt(orderno),\n                \"items\": parseInt(items),\n                \"price\": parseInt(price),\n                \"uid\": parseInt(uid),\n                \"startdate\": startDate.toString()\n                }\n            this.props.action(user);\n            console.log(\"action user\", user);\n        }\n      \n        this.refs.uid.value = '';\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n        this.refs.order.value = '';\n        this.refs.items.value = '';\n        this.refs.price.value = '';\n        this.refs.startdate.value = '';\n      }\n\n      add  = ()=>{ // remove this sample child function to add order\n        const user1 = {\n            \"email\": \"email@sample.com\",\n            \"items\": \"200\",\n            \"name\": \"Ravi Test\",\n            \"order\": \"Ravi Books\",\n            \"orderno\": \"8001\",\n            \"phone\": \"8123456789\",\n            \"price\": \"50\",\n            \"total\": 0,\n            \"date\": \"03/4/20\",\n            \"uid\": \"1675303448945\"\n          }\n        this.props.action(user1);\n\n        /* const { users }  = this.state;\n        users.push(user);\n        this.setState({ users }); */\n            // this.setState({ users });\n      }\n}\n\nexport default AddOrder;\n","import React from 'react';\n\nclass UpdateReadOnly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {readonly: true};\n        this.updateChange = this.updateChange.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.uid = React.createRef();\n        this.name = React.createRef();\n        this.email = React.createRef();\n        this.phone = React.createRef();\n        this.order = React.createRef();\n        this.orderno = React.createRef();\n        this.items = React.createRef();\n        this.price = React.createRef();\n        this.total = React.createRef();\n        this.state = {\n            user: {\n                uid: '',\n                name: '',\n                email: '',\n                phone: '',\n                order: '',\n                orderno: '',\n                items: '',\n                price: '',\n                total: ''\n            },\n            showUpdateBtn:false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.user !== nextProps.user) {\n            this.setState({ user: nextProps.user })\n        }\n    }\n    updateField = (name, e) => {\n        e.preventDefault();\n        // console.log(\"Field Update\", name, e.target.value);\n        this.setState({\n            user: {\n                ...this.state.user,\n                [name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            }\n        });\n    }\n\n    updateChange = (event) => {\n        event.preventDefault();\n        /* if (typeof this.props.update === 'function') {\n            let user = {};\n            this.props.update(user);\n        } */\n    }\n    updateBtn = (event) => {\n        event.preventDefault();\n        this.setState({\n            showUpdateBtn : !this.state.showUpdateBtn,\n            readonly : \"readonly\"\n            });\n    }\n\n    render() {\n        console.log(\"updatejs\", this.props.user);\n        // readOnly={this.props.user}\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h4 className='my-3'>Order Details</h4>\n                    <form>\n                        <div className=\"form-row\">\n                            <input type='hidden' ref={this.uid} value={this.state.user.uid || ''} />\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder No</label>\n                                <input type=\"text\" ref={this.orderno} value={this.state.user.orderno || ''} onChange={(e) => this.updateField(\"orderno\", e)} className=\"form-control\" placeholder=\"Oder No\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Oder Name</label>\n                                <input type=\"text\" ref={this.order} value={this.state.user.order || ''} onChange={(e) => this.updateField(\"order\", e)} className=\"form-control\" placeholder=\"Oder Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Number of Items</label>\n                                <input type=\"number\" ref={this.items} value={this.state.user.items || ''} onChange={(e) => this.updateField(\"items\", e)} className=\"form-control\" placeholder=\"Number of Items\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Item Price</label>\n                                <input type=\"number\" ref={this.price} value={this.state.user.price || ''} onChange={(e) => this.updateField(\"price\", e)} className=\"form-control\" placeholder=\"Item Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Total</label>\n                                <input type=\"text\" ref={this.total} value={this.state.user.items * this.state.user.price || ''} onChange={(e) => this.updateField(\"total\", e)} className=\"form-control\" placeholder=\"Total Cost\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Name</label>\n                                <input type=\"text\" ref={this.fname} value={this.state.user.fname || ''} onChange={(e) => this.updateField(\"fname\", e)} className=\"form-control\" placeholder=\"First Name\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Email</label>\n                                <input type=\"text\" ref={this.email} value={this.state.user.email || ''} onChange={(e) => this.updateField(\"email\", e)} className=\"form-control\" placeholder=\"Email\" readOnly />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label>Mobile / Phone No</label>\n                                <input type=\"number\" ref={this.phone} value={this.state.user.phone || ''} onChange={(e) => this.updateField(\"phone\", e)} className=\"form-control\" placeholder=\"Mobile / Phone No\" readOnly />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n        if (this.state.readonly) {\n            return (\n                <UpdateBtn  />\n            );\n          }\n          return (\n                <UpdateBtn />\n          );\n    }\n}\nexport default UpdateReadOnly;\n\nfunction UpdateBtn(props) {\n    return <button type=\"button\" className=\"btn btn-primary\">Save</button>\n  }\n","import React from 'react';\nimport UpdateReadOnly from './updateReadOnly'\nclass ModalDialogReadOnly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateList = this.updateList.bind(this);\n  }\n\n  updateList = (user) => {\n    if (typeof this.props.update === 'function') {\n      console.log(\"updateParent ModalDialog.js\", user);\n      this.props.update(user);\n    }\n  }\n\n  render() {\n    const maxwidth = { \"maxWidth\": \"80%\" };\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"orderModal\" role=\"dialog\">\n          <div className=\"modal-dialog\" style={maxwidth}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal Options</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\">\n                  <UpdateReadOnly user={this.props.user} readonly=\"false\" update={this.updateList} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalDialogReadOnly;","  import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport ModalDialogReadOnly from './modalDialogReadOnly';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayData = this.displayData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.state = {\n      user: {write:true}\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          {/* <div className='myst'>Orders</div> */}\n            <h4 className='my-3'>Orders List</h4>\n            {this.props.users.map(user => \n            <div key={user.orderno} className=\"row rowblock rounded\">\n              <div className=\"mt-2 col-md-4\"><strong className=\"title\">Order Name</strong>: <a href=\"#\" onClick={(event) => this.displayData(user, event)} className=\"btn btn-secondary\" role=\"button\">{user.order}.</a></div>\n              <div className=\"mt-2 col-md-2\"><strong className=\"title\">Items</strong>: {user.items}.</div>\n              <div className=\"mt-2 col-md-2\"><strong className=\"title\">Cost</strong>: {user.price}.</div>\n              <div className=\"mt-2 col-md-2\"><strong className=\"title\">Total</strong>: {user.items * user.price}.</div>\n              <div className=\"mt-2 mb-2 col-md-2\"><strong className=\"title\">Call</strong>: <a href={\"tele:+91\"+user.phone} className=\"btn btn-success\" role=\"button\"><i className=\"fas fa-phone-alt\"> </i></a></div>\n            </div>\n            )}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialogReadOnly user={this.state.user} update={this.updateApp} />\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"updateParent OrderDList.js\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false })\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  displayData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n  \n}\nexport default Home;\n","import React from 'react';\nimport $ from 'jquery';\nimport ModalDialog from './modalDialog'\nimport moment from 'moment';\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.editData = this.editData.bind(this);\n    this.updateApp = this.updateApp.bind(this);\n    this.removeData = this.removeData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  searchStyle = {fontSize: \"24px\",\n                  align: \"right\",\n                  textAlign: \"right\",\n                  display: \"block\",\n                  paddingTop: \"15px\"\n                } \n\n  state = { searchString: '' }\n  handleChange = (e) => {\n    this.setState({ searchString: e.target.value });\n  }\n  render() {\n    var libraries = this.props.users,\n      searchString = this.state.searchString.trim().toLowerCase();\n    if (searchString.length > 0) {\n      libraries = libraries.filter(function (i) {\n        return i.name.toLowerCase().match(searchString);\n      });\n    }\n    return (\n      <div>\n        <div className='row' style={{marginTop: \"20px\"}}>\n        <div className='col-md-3'><i style={this.searchStyle} className=\"fas fa-search\"> Search</i></div>\n        <div className='col-md-7'><input type=\"text\" className=\"form-control form-control-lg\" value={this.state.searchString} onChange={this.handleChange} placeholder=\"Type here...\" /></div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12 col-md-12'>\n          <div className=\"searchContainer col-xl-6 col-md-6\">\n          \n          </div>\n            <ul>\n              {libraries.map(user =>\n                <div key={user.orderno} className=\"d-inline-flex flex-row\"\n                  style={{ margin: '0.5rem', maxWidth: \"450px\" }} id={user.uid}>\n                  <div className=\"card-deck pt-1 mb3\">\n                    <div className=\"card text-dark d-flex align-items-stretch\">\n                      <div className=\"card-body text-primary\">\n                        <h5 className=\"card-title\"><span\n                          className=\"text-danger\">Name: </span> {user.name}</h5>\n                        <h5 className=\"card-title\"><span className=\"\">First Name: </span> {user.fname}, <span\n                          className=\"\">Last Name: </span> {user.lname}</h5>\n                        <p className=\"card-text\"><span\n                          className=\"\">Order No: </span> {user.orderno}</p>\n                        <p className=\"card-text\"><span\n                          className=\"\">Order: </span> {user.order}</p>\n                        <p className=\"card-text\"><span\n                          className=\"\">Items: </span>{user.items}, <span\n                            className=\"\">Price: </span><i\n                              className=\"fa fa-inr\"></i> {user.price}, <span\n                                className=\"\">Total: </span><i\n                                  className=\"fa fa-inr\"></i> {user.items * user.price}</p>\n                        <p className=\"card-text\"><span\n                          className=\"\">Email: </span>{user.email}</p>\n                        <p className=\"card-text\"><span\n                          className=\"\">Mobole: </span>{user.phone}</p>\n                        <p className=\"card-text\"><span\n                          className=\"\">Start Date: </span>{moment(user.startdate).format('DD/MM/YYYY')}</p>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={(event) => this.removeData(user, event)}>Delete</button>\n                        <button type=\"button\" className=\"btn btn-primary ml-3\" onClick={(event) => this.editData(user, event)}>Edit</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </ul>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <ModalDialog user={this.state.user} update={this.updateApp} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  updateApp(user) {\n    if (typeof (this.props.update) === 'function') {\n      console.log(\"update user search file\", user);\n      this.props.update(user);\n      $(\"#orderModal\").modal({ show: false });\n      $(\".modal-backdrop\").remove();\n    }\n  }\n\n  removeData(user, e) {\n    e.preventDefault();\n    if (typeof (this.props.remove) === 'function') {\n      console.log(\"Remove Data @ odlist.js\", user);\n      this.props.remove(user);\n    }\n  }\n\n  editData(user, e) {\n    e.preventDefault();\n    $(\"#orderModal\").modal({ show: true });\n    this.setState({\n      user: user\n    });\n  }\n\n}\n\nexport default Search;\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = { activeId: 1 };\n\n    handleClick(event, id) {\n        // event.preventDefault();\n        // console.log(\"id\", id);\n        this.setState({ activeId: id })\n    }\n\n    Links = [\n        {name: <i className='fas fa-home'>  Home</i>, path: \"/\", id: 1},\n        {name: <i className='fas fa-th-large'>  Orders</i>, path: \"/olist\", id: 2},\n        {name: <i className='fas fa-info-circle'>  Details</i> , path: \"/od\", id: 3},\n        {name: <i className='fas fa-search'>  Search</i>, path: \"/ser\", id: 5},\n        {name: <i className='fas fa-plus'>  Add</i>, path: \"/add\", id: 4}\n    ]\n\n    render() {\n        return (\n            <div>\n                <nav className=\"nav nav-pills nav-justified\">\n\n                    {\n                        this.Links.map(link =>\n                            <Link\n                                key={link.id}\n                                to={link.path}\n                                className={this.state.activeId === link.id ? \"nav-link nav-item btn-success menublock active\" : \"nav-link nav-item btn-success menublock\"}\n                                onClick={(event) => this.handleClick(event, link.id)}\n                            >\n                                {link.name}\n                            </Link>\n                        )\n                    }\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Firebase from '../node_modules/firebase';\nimport config from './config';\nimport OrderDetails from './orderdetails';\nimport OrderDetailsList from './orderdetailslist';\nimport AddOrder from './addorder';\nimport Home from './home';\nimport Search from './search';\nimport Menu from './menu';\nimport NotFound from './notfound';\nimport {Typeahead, Fragment, Control } from 'react-typeahead';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      users: []\n    }\n    this.addData = this.addData.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.removeData = this.removeData.bind(this);\n  }\n\n  render() {\n    // console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL);\n    const base = process.env.PUBLIC_URL;\n    // console.log(\"base Redirect\", base);\n    return (\n      <Router  basename={process.env.PUBLIC_URL}>\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row\">\n            <div className='col-xl-12'>\n              <h2>Viswa Orders</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <Menu />\n            </div>\n          </div>\n          <div className=\"row  my-2\">\n            <div className=\"col-xl-12\">\n              <Switch>\n                <Route exact path=\"/\" render={props => <Home users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/olist\" render={props => <OrderDetailsList users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/od\" render={props => <OrderDetails users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/ser\" render={props => <Search users={this.state.users} update={this.updateData} remove={this.removeData} />} />\n                <Route exact path=\"/add\" render={props => <AddOrder users={this.state.users} action={this.addData} />} />\n                <Route render={(base) => <Redirect to={base} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    console.log('DATA SAVED', this.state);\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, function(){\n        console.log('DATA RETRIEVED Users', this.state.users);\n      });\n    });\n    console.log('DATA RETRIEVED');\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log(\"componentDidUpdate\", prevState, this.state);\n    // only write when it's different with the new state\n    if (prevState.users !== this.state.users) {\n      this.writeUserData();\n      console.log(\"componentDidUpdate, writeUserData\");\n    }\n  }\n\n  addData = user => {\n    // console.log(\"This State Data\", this.state.users);\n    if (user) {\n      const { users } = this.state;\n      console.log('users Data', users);\n      users.push(user)\n      this.setState({ users });\n    }\n  }\n\n  removeData = (user) => {\n    if(user){\n      const { users } = this.state;\n      const newState = users.filter(data => {\n        return data.uid !== user.uid;\n      });\n      if(users !== newState){\n        this.setState({ users: newState });\n      }\n      console.log(\"Updated Users state\");\n    }\n  }\n\n  updateData = (user) => {\n    console.log(\"updateData fun in app.js\", user);\n    if(user){\n      console.log(\"if user in app.js\");\n      let name = user.name;\n      let email = user.email;\n      let phone = user.phone;\n      let order = user.order;\n      let orderno = user.orderno;\n      let items = user.items;\n      let price = user.price;\n      let uid = user.uid;\n      let startdate = user.startdate\n      const condition = ( name && email && phone && order && orderno && items && price && startdate);\n      if (uid && condition) {\n        console.log(\"Update condition met\");\n        const { users } = this.state;\n        const devIndex = users.findIndex(user => {\n          return user.uid === uid\n        });\n        console.log(\"devIndex\", devIndex);\n        users[devIndex].name = name;\n        users[devIndex].email = email;\n        users[devIndex].phone = phone;\n        users[devIndex].order = order;\n        users[devIndex].orderno = orderno;\n        users[devIndex].items = items;\n        users[devIndex].price = price;\n        users[devIndex].startdate = startdate;\n        this.setState({ users: users });\n      }\n    console.log(\"Updateed State appjs\", this.state.users);\n  }\n}\n}\nexport default App;","import React from 'react';\n\nclass NotFound extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n        return (\n            <div className='row'>\n                <div className='col-xl-12'>\n                    <h2 className='my-3'>404 page</h2>\n                    <p>File not found</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}